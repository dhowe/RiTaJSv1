!function(window,undefined){function makeClass(){return function(e){return this instanceof arguments.callee?void("function"==typeof this.init&&this.init.apply(this,e&&e.callee?e:arguments)):new arguments.callee(arguments)}}function is(e,t){return get(e)===t}function ok(e,t){if(get(e)!=t)throw TypeError("Expected "+(t?t.toUpperCase():t+E)+", but received "+(e?get(e).toUpperCase():e+E));return!0}function isNum(e){return!isNaN(parseFloat(e))&&isFinite(e)}function okeys(e){var t=[];for(var i in e)t.push(i);return t}function err(){for(var e="[RiTa] "+arguments[0],t=1;t<arguments.length;t++)e+="\n"+arguments[t];throw Error(e)}function warn(){if(!RiTa.SILENT&&console&&arguments&&arguments.length){console.warn("[WARN] "+arguments[0]);for(var e=1;e<arguments.length;e++)console.warn(arguments[e])}}function log(){!RiTa.SILENT&&console&&console.log.apply(console,arguments)}function strOk(e){return typeof e===S&&e.length>0}function trim(e){return strOk(e)?e.replace(/^\s\s*/,"").replace(/\s\s*$/,""):e}function last(e){return e&&e.length?e.charAt(e.length-1):E}function extend(e,t){for(var i=0;i<t.length;i++)e.push(t[i])}function endsWith(e,t){return is(e,S)?new RegExp(t+"$").test(e):!1}function startsWith(e,t){return is(e,S)?new RegExp("^"+t).test(e):!1}function equalsIgnoreCase(e,t){return is(e,S)&&is(t,S)?e.toLowerCase()===t.toLowerCase():!1}function isNode(){return"undefined"!=typeof module&&module.exports}function shuffle(e){for(var t=e.slice(),i=t.length,r=i;r--;){var n=parseInt(Math.random()*i),s=t[r];t[r]=t[n],t[n]=s}return t}function inArray(e,t){return e?e.indexOf(t)>-1:!1}function escapeRegExp(e){return e.replace(/([.*+?^=!:${}()|\[\]\/\\])/g,"\\$1")}function get(e){return"undefined"!=typeof e?{}.toString.call(e).match(/\s([a-zA-Z]+)/)[1].toLowerCase():void 0}var E="",SP=" ",EA=[],N="number",S="string",O="object",A="array",B="boolean",R="regexp",F="function",RiLexicon=makeClass();RiLexicon.enabled=!1,RiLexicon.prototype.init=function(){throw Error("RiLexicon is not available -- if needed, make sure to include rilexicon.js")};for(var RiTa={VERSION:"1.1.19",LEXICON:null,SPLIT_CONTRACTIONS:!1,JAVA:1,JS:2,NODE:3,_FEATURES:["tokens","stresses","phonemes","syllables","pos","text"],FIRST_PERSON:1,SECOND_PERSON:2,THIRD_PERSON:3,PAST_TENSE:4,PRESENT_TENSE:5,FUTURE_TENSE:6,SINGULAR:7,PLURAL:8,NORMAL:9,FEATURE_DELIM:":",STRESSED:"1",UNSTRESSED:"0",PHONEME_BOUNDARY:"-",WORD_BOUNDARY:" ",SYLLABLE_BOUNDARY:"/",SENTENCE_BOUNDARY:"|",VOWELS:"aeiou",ABBREVIATIONS:["Adm.","Capt.","Cmdr.","Col.","Dr.","Gen.","Gov.","Lt.","Maj.","Messrs.","Mr.","Mrs.","Ms.","Prof.","Rep.","Reps.","Rev.","Sen.","Sens.","Sgt.","Sr.","St.","a.k.a.","c.f.","i.e.","e.g.","vs.","v.","Jan.","Feb.","Mar.","Apr.","Mar.","Jun.","Jul.","Aug.","Sept.","Oct.","Nov.","Dec."],INFINITIVE:1,GERUND:2,IMPERATIVE:3,BARE_INFINITIVE:4,SUBJUNCTIVE:5,SILENT:!1,LANCASTER:"Lancaster",PORTER:"Porter",PLING:"Pling",DATA_LOADED:"DataLoaded",INTERNAL:"Internal",UNKNOWN:"Unknown",NON_BREAKING_SPACE:"<sp/>",PARAGRAPH_BREAK:"<p/>",LINE_BREAK:"<br/>",STOP_WORDS:[".",",","the","and","a","of",'"',"in","i",":","you","is","to","that",")","(","it","for","on","!","have","with","?","this","be","...","not","are","as","was","but","or","from","my","at","if","they","your","all","he","by","one","me","what","so","can","will","do","an","about","we","just","would","there","no","like","out","his","has","up","more","who","when","don't","some","had","them","any","their","it's","only",";","which","i'm","been","other","were","how","then","now","her","than","she","well","also","us","very","because","am","here","could","even","him","into","our","much","too","did","should","over","want","these","may","where","most","many","those","does","why","please","off","going","its","i've","down","that's","can't","you're","didn't","another","around","must","few","doesn't","every","yes","each","maybe","i'll","away","doing","oh","else","isn't","he's","there's","hi","won't","ok","they're","yeah","mine","we're","what's","shall","she's","hello","okay","here's","-","less"],_lexicon:function(){return RiTa.LEXICON||(RiTa.LEXICON=new RiLexicon),RiTa.LEXICON},untokenize:function(e,t,i){if(t=t||SP,i=i||1){for(var r=e[0]||E,n=1;n<e.length;n++)e[n]&&(RiTa.isPunctuation(e[n])||(r+=t),r+=e[n]);return r.trim()}return e.join(t)},random:function(){var e=Math.random();return arguments.length?1===arguments.length?e*arguments[0]:e*(arguments[1]-arguments[0])+arguments[0]:e},randomItem:function(e){return e[Math.floor(Math.random()*e.length)]},distance:function(e,t,i,r){var n=e-i,s=t-r;return Math.sqrt(n*n+s*s)},_tagForPENN:function(e){if(!e||!e.length)return EA;var t=is(e,S)?RiTa.tokenize(e):e;return PosTagger.tag(t)},_tagForWordNet:function(e){var t,i=RiTa._tagForPENN(e);if(e&&i.length){for(var r=0;r<i.length;r++)t=i[r],i[r]="-",PosTagger.isNoun(t)?i[r]="n":PosTagger.isVerb(t)?i[r]="v":PosTagger.isAdverb(t)?i[r]="r":PosTagger.isAdj(t)&&(i[r]="a");return i}return EA},getPosTags:function(e,t){return t?RiTa._tagForWordNet(e):RiTa._tagForPENN(e)},getPosTagsInline:function(e,t){if(!e||!e.length)return E;t=t||"/",e=is(e,S)?RiTa.tokenize(e):e;for(var i=E,r=RiTa.getPosTags(e),n=0;n<e.length;n++)i+=e[n],RiTa.isPunctuation(e[n])||(i+=t+r[n]),i+=SP;return i.trim()},getPresentParticiple:function(e){return Conjugator().getPresentParticiple(e)},getPastParticiple:function(e){return Conjugator().getPastParticiple(e)},concordance:function(e,t){return Concorder(e,t).concordance()},kwic:function(e,t,i){return wordCount=i&&i.wordCount||4,Concorder(e,i).kwic(t,wordCount)},conjugate:function(e,t){return Conjugator().conjugate(e,t)},upperCaseFirst:function(e){return e.charAt(0).toUpperCase()+e.substring(1)},pluralize:function(e){if(!strOk(e))return E;var t,i,r=PLURAL_RULES;if(inArray(MODALS,e.toLowerCase()))return e;for(t=0;t<r.length;t++)if(i=r[t],i.applies(e.toLowerCase()))return i.fire(e);return DEFAULT_PLURAL_RULE.fire(e)},singularize:function(e){if(!strOk(e))return E;var t,i,r=SINGULAR_RULES;if(inArray(MODALS,e.toLowerCase()))return e;for(t=r.length;t--;)if(i=r[t],i.applies(e.toLowerCase()))return i.fire(e);return this.stem(e,"Pling")},trim:function(e){return trim(e)},tokenize:function(e,t){return is(e,S)?t?e.split(t):(e=trim(e).replace(/``/g,"`` "),e=e.replace(/''/g,"  ''"),e=e.replace(/([\\?!\"\\.,;:@#$%&])/g," $1 "),e=e.replace(/\\.\\.\\./g," ... "),e=e.replace(/\\s+/g,SP),e=e.replace(/,([^0-9])/g," , $1"),e=e.replace(/([^.])([.])([\])}>\"']*)\\s*$/g,"$1 $2$3 "),e=e.replace(/([\[\](){}<>])/g," $1 "),e=e.replace(/--/g," -- "),e=e.replace(/$/g,SP),e=e.replace(/^/g,SP),e=e.replace(/([^'])' /g,"$1 ' "),e=e.replace(/'([SMD]) /g," '$1 "),RiTa.SPLIT_CONTRACTIONS&&(e=e.replace(/'ll /g," 'll "),e=e.replace(/'re /g," 're "),e=e.replace(/'ve /g," have "),e=e.replace(/n't /g," not "),e=e.replace(/'LL /g," 'LL "),e=e.replace(/'RE /g," 'RE "),e=e.replace(/'VE /g," 'VE "),e=e.replace(/N'T /g," N'T ")),e=e.replace(/ ([Cc])an't /g," $1an not "),e=e.replace(/ ([Cc])annot /g," $1an not "),e=e.replace(/ ([Dd])idn't /g," $1id not "),e=e.replace(/ ([CcWw])ouldn't /g," $1ould not "),e=e.replace(/ ([A-Z]) \\./g," $1. "),e=e.replace(/\\s+/g,SP),e=e.replace(/^\\s+/g,E),trim(e).split(/\s+/)):[]},splitSentences:function(e,t){var i=e.match(/(\S.+?[.!?])(?=\s+|$)/g);return e.length&&i&&i.length?i:[e]},isAbbreviation:function(e,t){return t=t||!1,e=t?e:RiTa._titleCase(e),inArray(this.ABBREVIATIONS,e)},_loadStringNode:function(e,t,i){var r="",n=i||SP,s=/.+?:\/\/.+/.test(e),o=this;if(s){var a=function(i){i.on("data",function(e){r+=e}),i.on("error",function(e){throw e}),i.on("end",function(){r=r.toString("utf-8").replace(/[\r\n]+/g,n).trim(),o.fireDataLoaded(e,t,r)})},l=require("http").request(e,a);l.on("socket",function(e){e.setTimeout(5e3),e.on("timeout",function(){throw l.abort(),Error("[RiTa] loadString timed-out and aborted request")})}),l.end()}else{var u=require("fs");u.readFile(e,function(i,r){if(i||!r)throw err("[Node] Error reading file: "+e+"\n"+i),i;r=r.toString("utf-8").replace(/[\r\n]+/g,n).trim(),o.fireDataLoaded(e,t,r)})}},_loadStringXML:function(e,t,i){var r=this,n=[],s=i||SP,o=new XMLHttpRequest;return o.addEventListener("error",function(){console.error("[RiTa] loadString() unable to load "+e)}),o.open("GET",e,!0),o.onreadystatechange=function(){if(4===o.readyState)if(200===o.status){var i=o.responseText.match(/[^\r\n]+/g);for(var a in i)n[a]=i[a];n=n.join(s),console.log("MATCH-ARRAY: "+(i===n)),r.fireDataLoaded(e,t,n)}else console.error("[RiTa] loadString() unable to load: "+e)},o.send(null),n},_loadStringDOM:function(e,t,i){function r(e){var t=document.createElement("div"),i="";if(t.innerHTML=e,0===t.childNodes.length)return E;for(var r=0;r<t.childNodes.length;r++)i+=t.childNodes[r].nodeValue;return i}var n,s,o=i||SP,a=this;if("undefined"==typeof document||!document)throw Error("Document 'undefined' (are you running in a browser?)");return s=document.createElement("iframe"),s.setAttribute("src",e),s.setAttribute("style","display: none"),document.body?(document.body.appendChild(s),n=s.contentWindow||s.contentDocument.parentWindow,void(n.onload=function(){var i="[RiTa] loadString() unexpected error!";return n&&n.document&&n.document.body&&n.document.body.childNodes&&n.document.body.childNodes.length?i=n.document.body.childNodes[0].innerHTML:console.error("[RiTa] loadString("+e+") failed trying iFrame-load"),i?(i=r(i.replace(/[\r\n]+/g,o).trim()),void a.fireDataLoaded(e,t,i)):(console.error("[RiTa] loadString("+e+") unable to load text from: "+e),E)})):(console.error("[RiTa] loadString() found null document.body!"),E)},loadStrings:function(e,t){var i=this.fireDataLoaded;this.loadString(e,function(r){i(e,t,r.split("\n"))},"\n")},loadString:function(e,t,i){ok(e,S);var r=i||SP,n=isNode()?this._loadStringNode:this._loadStringDOM;n.call(this,e,t,r)},fireDataLoaded:function(e,t,i){return t?t(i,e):RiTaEvent({name:"RiTaLoader",urls:is(e,S)?[e]:e},RiTa.DATA_LOADED,i)._fire()},isQuestion:function(e){for(var t=RiTa.tokenize(e),i=0;i<QUESTION_STARTS.length;i++)if(equalsIgnoreCase(t[0],QUESTION_STARTS[i]))return!0;return!1},isSentenceEnd:function(e,t){if(!is(e,S)||!is(t,S))return!1;var i=e.charAt(0),r=e.length;if(RiTa.isAbbreviation(e))return!1;if(r>1&&-1!=i.indexOf("`'\"([{<")&&RiTa.isAbbreviation(e.substring(1)))return!1;if(r>2&&("'"==e.charAt(0)&&"'"==e.charAt(1)||"`"==e.charAt(0)&&"`"==e.charAt(1))&&RiTa.isAbbreviation(e.substring(2)))return!1;var n=t.length,s=e.charAt(r-1),o=r>1?e.charAt(r-2):" ",a=r>2?e.charAt(r-3):" ",l=t.charAt(0),u=n>1?t.charAt(1):" ",h=n>2?t.charAt(2):" ";return l==l.toUpperCase()||u==u.toUpperCase()&&-1!=l.indexOf("`'\"([{<")||h==h.toUpperCase()&&("`"==l&&"`"==u||"'"==l&&"'"==u)||"_"==t||"<"==l?"?"==s||"!"==s||-1!=o.indexOf("?!.")&&-1!=s.indexOf("\"'}>)")||-1!=a.indexOf("?!.")&&"'"==o&&"'"==s?!0:"."!=s?!1:2==r&&o==o.toUpperCase()?!1:4==r&&"."==a&&o==o.toUpperCase()&&e.charAt(0)==e.charAt(0).toUpperCase()?!1:!0:!1},isW_Question:function(e){for(var t=RiTa.tokenize(e),i=0;i<W_QUESTION_STARTS.length;i++)if(equalsIgnoreCase(t[0],W_QUESTION_STARTS[i]))return!0;return!1},unescapeHTML:function(e){if(!e||!e.length)return e;var t=e.replace(/&lt;/g,"<").replace(/&gt;/g,">").replace(/&amp;/g,"&").replace(/&quot;/g,'"');return String.fromCharCodePoint=function(){for(var e=[],t=0;t<arguments.length;t++){var i=arguments[t];arguments[t]<65536?e.push(arguments[t]):arguments[t]<1114112&&(i-=65536,e.push((i>>10&1023)+55296),e.push((1023&i)+56320))}return String.fromCharCode.apply(String,e)},t=t.replace(/&#(\d+);/g,function(e,t){return String.fromCharCodePoint(parseInt(t,10))}).replace(/&#x([0-9a-f]+);/gi,function(e,t){return String.fromCharCodePoint(parseInt(t,16))})},randomOrdering:function(e){var t=[];if(e){for(var i=0;e>i;i++)t.push(i);for(var r,n,s=t.length;s;r=parseInt(Math.random()*s),n=t[--s],t[s]=t[r],t[r]=n);}return t},trimPunctuation:function(e){if(!is(e,S))return e;var t="[�`~\"/\\'_\\-[\\]{}()*+!?%&.,\\\\^$|#@<>|+=;:]",i=new RegExp("^"+t+"+|"+t+"+$","g");return e===E?E:e.replace(i,E)},stripPunctuation:function(e){return e===E?E:e.replace(PUNCTUATION_CLASS,E)},isPunctuation:function(e){return e&&e.length?ONLY_PUNCT.test(e):!1},hasPunctuation:function(e){return e&&e.length?ONLY_PUNCT.test(e):!1},env:function(){return isNode()?RiTa.NODE:RiTa.JS},chomp:function(e){return e.replace(/\s+$|^\s+/g,E)},getPhonemes:function(e){return RiString(e).analyze().get(RiTa.PHONEMES)},getStresses:function(e){return RiString(e).analyze().get(RiTa.STRESSES)},getSyllables:function(e){return RiString(e).analyze().get(RiTa.SYLLABLES)},getWordCount:function(e){return RiTa.tokenize(e).length},stem:function(e,t){t=t||"Lancaster","Lancaster"!=t&&"Porter"!=t&&"Pling"!=t&&err("Bad stemmer type: "+t);var i=RiTa["stem_"+t];if(e.indexOf(SP)<0)return i(e);e=e.replace(/[^\w]/g,SP).replace(/\s+/g,SP);for(var r=[],n=e.split(SP),s=0;s<n.length;s++)r.push(i(n[s]));return r.join(SP)},_titleCase:function(e){return e&&e.length?e.substring(0,1).toUpperCase()+e.substring(1):e},minEditDistance:function(e,t,i){var r=i?MinEditDist.computeAdjusted:MinEditDist.computeRaw;return r.call(MinEditDist,e,t)},_makeClass:function(){return function(e){return this instanceof arguments.callee?void("function"==typeof this.init&&this.init.apply(this,e&&e.callee?e:arguments)):new arguments.callee(arguments)}}},i=0;i<RiTa._FEATURES.length;i++)RiTa[RiTa._FEATURES[i].toUpperCase()]=RiTa._FEATURES[i];var RiMarkov=makeClass();RiMarkov.MAX_GENERATION_ATTEMPTS=1e3,RiMarkov._SSRE=/"?[A-Z][a-z"',;`-]*/,RiMarkov._SSDLM="D=l1m_",RiMarkov.prototype={init:function(e,t,i){var r=this._initArgs.apply(this,arguments);ok(r[0],N),this._n=r[0],this.pathTrace=[],this.sentenceList=[],this.sentenceStarts=[],this.minSentenceLength=6,this.maxSentenceLength=35,this.maxDuplicatesToSkip=1e4,this.root=new TextNode(null,"ROOT"),this.isSentenceAware=r.length>1&&!r[1]?!1:!0,this.allowDuplicates=r.length>2&&!r[2]?!1:!0,this.printIgnoredText=!1,this.smoothing=!1},_initArgs:function(){var e=arguments,t=get(e[0]);return!e.length||t!==O&&"global"!==t&&"window"!==t?e:this._initArgs.apply(this,Array.prototype.slice.call(e,1))},getProbability:function(e){this.root||err("Model not initd: null root!");var t=is(e,S)?this.root.lookup(e):this._findNode(e);return t?t.probability():0},getProbabilities:function(e){is(e,S)&&(e=[e]),e.length>this._n&&(e=e.slice(Math.max(0,e.length-(this._n-1)),e.length));var t={},i=this._findNode(e);if(!i)return{};for(var r=i.childNodes(),n=0;n<r.length;n++){var s=r[n];s&&(t[s.token]=s.probability())}return t},getCompletions:function(e,t){var i,r,n,s,o=[];if(t){if(e.length+t.length>this._n&&err("Sum of pre.length && post.length must be < N, was "+(e.length+t.length)),i=this._findNode(e),!i)return null;s=i.childNodes();for(var a=0;a<s.length;a++){r=s[a],n=e.slice(0),n.push(r.token);for(var l=0;l<t.length;l++)n.push(t[l]);this._findNode(n)&&o.push(r.token)}return o}var u=this.getProbabilities(e),h=okeys(u);return h.sort(function(e,t){return u[t]-u[e]})},generateUntil:function(e,t,i){t=t||1,i=i||Number.MAX_VALUE;var r,n,s=0,o=999;e:for(;++s<o;)for(n=this.generateTokens(t);n.length<i;){if(r=this._nextNodeForArr(n),!r||!r.token)continue e;if(n.push(r.token),r.token.search(e)>-1)return n}return s>=o&&err("\nRiMarkov failed to complete after "+s+" attempts\n"),n},generateTokens:function(e){var t=0,i=500,r=[];e:for(;++t<i;){var n=this.root.selectChild(null,!0);if(n&&n.token){for(r.push(n);r.length<e;){if(n=this._nextNodeForArr(r),!n||!n.token){r=[];continue e}r.push(n)}break}}r.length<e&&err("\nRiMarkov failed to complete after "+t+" tries, with only "+r.length+" successful generations...\n");for(var s=[],o=0;o<r.length;o++)s[o]=r[o].token;return s},useSmoothing:function(e){return arguments.length?(this.smoothing=e,this):this.smoothing},sentenceAware:function(){if(arguments.length>0)throw Error("sentenceAware() takes no arguments, instead use the constructor RiMarkov(n, recognizeSentences);");return this.isSentenceAware},getN:function(){return this._n},print:function(){return console&&console.log(this.root.asTree(!1)),this},ready:function(e){return this.size()>0},loadFrom:function(e,t,i,r){var n=this;is(e,S)||ok(e,A),is(t,F)?(r=t,t=undefined):is(i,F)&&(r=i,i=undefined),RiTa.loadString(e,function(e){n.loadText(e,t,i),r&&is(r,F)&&r(e)})},loadText:function(e,t,i){ok(e,S),t=t||1,(1>t||t!=Math.floor(t))&&err("Multiplier must be an positive integer, found: "+t);var r=this.isSentenceAware?this._loadSentences(RiTa.splitSentences(e),t):this.loadTokens(RiTa.tokenize(e,i),t);return r},loadTokens:function(e,t){t=t||1,(1>t||t!=Math.floor(t))&&err("multiplier must be an positive integer, found: "+t),this.root.count+=e.length;for(var i,r=0;r<e.length;r++){i=[];for(var n=0;n<this._n;n++)r+n<e.length?i[n]=e[r+n]?e[r+n]:null:i[n]=null;for(var s=0;t>s;s++)for(var o=this.root,a=0;a<i.length;a++)o.token&&(o=o.addChild(i[a],this.smoothing?2:1))}return this},generateSentences:function(e){this.isSentenceAware||err("generateSentences() can only be called when the model is in 'sentence-aware' mode, otherwise use generateTokens()");for(var t=this._getSentenceStart(),i=t.token+SP,r=[],n=0,s=0,o=1;r.length<e;)if(o>=this.maxSentenceLength&&(t=this._getSentenceStart(),i=t.token+SP,o=1),t.isLeaf())t=this._tracePathFromRoot(t);else if(t=this._nextNodeForNode(t),t.isSentenceStart){if(o>=this.minSentenceLength){var a=RiTa.untokenize(i.trim().split(/\s+/));a=a.replace(/(.)\( /,"$1 ("),this._validateSentence(a)&&(r.indexOf(a)<0&&r.push(a),s+=n,n=0)}t=this._getSentenceStart(),i=t.token+SP,o=1}else if(o++,i+=t.token+SP,++n>=RiMarkov.MAX_GENERATION_ATTEMPTS){this._onGenerationIncomplete(s+=n,r.length);break}return r},_validateSentence:function(e){var t=RiTa.tokenize(e),i=t[0],r=t[t.length-1];if(!i.match(/[A-Z]\S*/))return this.printIgnoredText&&log("Skipping: bad first char in '"+e+"'"),!1;if(!r.match(/[!?.]/))return this.printIgnoredText&&log("Bad last token: '"+r+"' in: "+e),!1;if(!this.allowDuplicates&&(this.isSentenceAware||err("Invalid state: allowDuplicates must be true when not generating sentences"),this.sentenceList.indexOf(e)>-1))return++this.skippedDups==this.maxDuplicatesToSkip&&(warn("Hit skip-maximum (RiMarkov.maxDuplicatesToSkip="+this.maxDuplicatesToSkip+") after skipping "+this.maxDuplicatesToSkip+", now allowing duplicates!"),this.allowDuplicates=!0),this.printIgnoredText&&log("Ignoring duplicate: "+e),!1;var n=e.split(/\s+/);return RiTa.isAbbreviation(n[n.length-1])?!1:!0},_tracePathFromRoot:function(e){e.pathFromRoot(this.pathTrace),this.pathTrace.pop();for(var t=this.root;this.pathTrace.length;){var i=this.pathTrace.pop();t=t.lookup(i)}return t},_nextNodeForArr:function(e){for(var t=Math.max(0,e.length-(this._n-1)),i=this.root.lookup(e[t++]),r=t;r<e.length;r++)i&&(i=i.lookup(e[r]));return i?i.selectChild(null,!0):null},_nextNodeForNode:function(e){for(var t,i=0,r=0,n=e.childNodes(),s=1e3;;){r=0,t=Math.random();for(var o=0,a=n.length;a>o;o++)if(r+=n[o].probability(),(!e.isRoot()||!this.isSentenceAware||n[o].isSentenceStart())&&r>t)return n[o];i++,warn("Prob. miss (#'+attempts+') in RiMarkov.nextNode(). Make sure there are a sufficient\n       # of sentences in the model that are longer than 'minSentenceLength'"),i==s&&err("PROB. MISS"+e+" total="+r+" selector="+t)}},_clean:function(e){return RiTa.trim(e.replace(/\s+/,SP))},_onGenerationIncomplete:function(e,t){warn("\nRiMarkov failed to complete after "+e+" tries\n       Giving up after "+t+" successful generations\n")},_loadSentences:function(e,t){ok(e,A),t=t||1,t=Math.min(t,1);var i,r,n,s,o=[];for(i=0;i<e.length;i++)if(s=this._clean(e[i]),this.allowDuplicates||this.sentenceList.push(s),n=RiTa.tokenize(s),this._validSentenceStart(n[0]))for(o.push(RiMarkov._SSDLM+n[0]),r=1;r<n.length;r++)o.push(n[r]);else this.printIgnoredText&&warn("Skipping (bad sentence start): "+n);var a,l=o,u=this.getN();for(i=0;i<l.length;i++){for(a=[],r=0;u>r;r++)i+r<l.length&&(a[r]=l[i+r]);for(r=0;t>r;r++)this._addSentenceSequence(a)}return this.root.count+=l.length,this},size:function(){return this.root.count},_validSentenceStart:function(e){return!this.isSentenceAware||e&&e.match(RiMarkov._SSRE)},_addSentenceSequence:function(e){for(var t=this.root,i=0;i<e.length;i++)if(e[i]&&t.token){var r=e[i];if(startsWith(r,RiMarkov._SSDLM)){r=r.substring(RiMarkov._SSDLM.length);var n=t;t=t.addChild(r,this.smoothing?2:1),t.isSentenceStart=!0,n.isRoot()&&this.sentenceStarts.push(t.token)}else t=t.addChild(r,this.smoothing?2:1)}},_getSentenceStart:function(){return this.isSentenceAware||err("getSentenceStart() can only be called when the model is in 'sentence-aware' mode..."),this.sentenceStarts&&this.sentenceStarts.length||err("No sentence starts found! genSen="+this.isSentenceAware),this.root.lookup(RiTa.randomItem(this.sentenceStarts))},_findNode:function(e){if(!e||!is(e,A)||!e.length)return null;var t=this._n,i=(Math.min(e.length,t-1),Math.max(0,e.length-(t-1))),r=this.root.lookup(e[i++]);if(!r)return null;var n=0,s=[];s[n++]=r;for(var o=i;o<e.length;o++){if(r=r.lookup(e[o]),!r)return null;s[n++]=r}return s?s[s.length-1]:null}};var RiWordNet=function(){throw Error("RiWordNet is not yet implemented in JavaScript!")},RiString=makeClass();RiString.phones={consonants:["b","ch","d","dh","f","g","hh","jh","k","l","m","n","ng","p","r","s","sh","t","th","v","w","y","z","zh"],vowels:["aa","ae","ah","ao","aw","ax","ay","eh","er","ey","ih","iy","ow","oy","uh","uw"],onsets:["p","t","k","b","d","g","f","v","th","dh","s","z","sh","ch","jh","m","n","r","l","hh","w","y","p r","t r","k r","b r","d r","g r","f r","th r","sh r","p l","k l","b l","g l","f l","s l","t w","k w","d w","s w","s p","s t","s k","s f","s m","s n","g w","sh w","s p r","s p l","s t r","s k r","s k w","s k l","th w","zh","p y","k y","b y","f y","hh y","v y","th y","m y","s p y","s k y","g y","hh w",""],digits:["z-ih-r-ow","w-ah-n","t-uw","th-r-iy","f-ao-r","f-ay-v","s-ih-k-s","s-eh1-v-ax-n","ey-t","n-ih-n"]},RiString._syllabify=function(e){for(var t,i,r=[],n=[],s="string"==typeof e?e.split("-"):e,o=0;o<s.length;o++){var a=s[o].trim(),l=i;if(a.length)if(isNum(last(a))&&(l=parseInt(last(a)),a=a.substring(0,a.length-1)),t&&log(o+")"+a+" stress="+l+" inter="+r.join(":")),inArray(RiString.phones.vowels,a)){for(var u=i,h=i,c=0;c<r.length+1;c++){u=r.slice(0,c),h=r.slice(c,r.length),t&&log("  "+c+") onset="+h.join(":")+"  coda="+u.join(":")+"  inter="+r.join(":"));var d=inArray(RiString.phones.onsets,h.join(" "));if(d||0===n.length||0===h.length){t&&log("  break "+a);break}}n.length>0&&(extend(n[n.length-1][3],u),t&&log("  tack: "+u+" -> len="+n[n.length-1][3].length+" ["+n[n.length-1][3]+"]"));var p=[[l],h,[a],[]];n.push(p),r=[]}else{if(!inArray(RiString.phones.consonants,a)&&" "!=a)throw Error("Invalid phoneme: "+a);r.push(a)}}return r.length>0&&(0===n.length?n.push([[i],r,[],[]]):extend(n[n.length-1][3],r)),RiString._stringify(n)},RiString._stringify=function(e){var t,i,r=[];for(t=0;t<e.length;t++){var n=e[t],s=n[0][0],o=n[1],a=n[2],l=n[3];s!==undefined&&a.length&&(a[0]+=E+s);var u=[];for(i=0;i<o.length;i++)u.push(o[i]);for(i=0;i<a.length;i++)u.push(a[i]);for(i=0;i<l.length;i++)u.push(l[i]);r.push(u.join("-"))}return r.join(SP)},RiString.prototype={init:function(e){is(e,N)&&(e=String.fromCharCode(e)),e=e||"",this.x=0,this.y=0,this.z=0,this._text=e,this._features=undefined},copy:function(){var e=RiString(this._text),t=this.features();if(t){e._features={};for(var i in t)e._features[i]=t[i]}return e},features:function(){return this._features||this.analyze(),this._features},_initFeatureMap:function(){this._features?(delete this._features.tokens,delete this._features.stresses,delete this._features.phonemes,delete this._features.syllables,delete this._features.pos,delete this._features.text):this._features={},this._features.text=this.text()},analyze:function(){var e,t,i,r,n,s,o=E,a=E,l=E,u="/",h="-",c=RiTa.tokenize(this._text);if(this._features||this._initFeatureMap(),this._features.tokens=c.join(SP),this._features.pos=RiTa.getPosTags(this._text).join(SP),RiLexicon.enabled){e=RiTa._lexicon();for(var d=0,p=c.length;p>d;d++){if(s=!1,i=e&&e._getRawPhones(c[d]),i||(c[d].match(/[a-zA-Z]+/)&&log("[RiTa] Used LTS-rules for '"+c[d]+"'"),r=e._letterToSound(),n=r.getPhones(c[d]),n&&n.length>0?i=RiString._syllabify(n):(i=c[d],s=!0)),o+=i.replace(/[0-2]/g,E).replace(/ /g,h)+SP,a+=i.replace(/ /g,u).replace(/1/g,E)+SP,s)l+=c[d];else{t=i.split(SP);for(var g=0;g<t.length;g++)t[g].length&&(l+=t[g].indexOf(RiTa.STRESSED)>-1?RiTa.STRESSED:RiTa.UNSTRESSED,g<t.length-1&&(l+=u))}endsWith(l,SP)||(l+=SP)}l=l.trim(),o=o.trim().replace(/\\s+/,SP),a=a.trim().replace(/\\s+/,SP)}return this._features.stresses=l,this._features.phonemes=o,this._features.syllables=a,this},get:function(e){this._features||this.analyze();var t=this._features[e];return!t&&RiTa._FEATURES.indexOf(e)>-1&&!this._features.hasOwnProperty(e)&&(this.analyze(),t=this._features[e]),t},set:function(e,t){return this._features||(this._features={}),this._features[e]=t,this},endsWith:function(e){return endsWith(this._text,e)},equals:function(e){return typeof e===S?e===this._text:e.text()===this._text},equalsIgnoreCase:function(e){return typeof e===S?e.toLowerCase()===this._text.toLowerCase():e.text().toLowerCase()===this._text.toLowerCase()},text:function(e){return arguments.length>0?(this._text=e,this._initFeatureMap(),this):this._text},pos:function(){for(var e=RiTa.tokenize(this._text),t=PosTagger.tag(e),i=0,r=t.length;r>i;i++)strOk(t[i])||err("RiString: can't parse pos for:"+e[i]);return t},posAt:function(e){var t=this.pos();return t&&t.length?t[Math.min(0>e?t.length+e:e,t.length-1)]:E},wordAt:function(e){var t=this.words();return 0>e||e>=t.length?E:t[e]},wordCount:function(){return this._text.length?this.words().length:0},words:function(){return RiTa.tokenize(this._text)},indexOf:function(e,t){return this._text.indexOf(e,t)},lastIndexOf:function(e,t){return this._text.lastIndexOf(e,t)},length:function(){return this._text.length},match:function(e){return this._text.match(e)||[]},slice:function(e,t){return this._text.slice(e,t)||E},insertChar:function(e,t){var i=this.text();if(e>i.length||e<-i.length)return warn("RiString.insertChar: bad index="+e),this;e=0>e?e+=i.length:e;var r=i.substring(0,e),n=i.substring(e);return t&&(r+=t),this.text(r+n)},removeChar:function(e){var t=this.text();return e>t.length||e<-t.length?(warn("RiString.removeChar: bad index="+e),this):(e=0>e?e+=t.length:e,this.text(this._text.substring(0,e).concat(this._text.substring(e+1))),this)},replaceChar:function(e,t){var i=this.text();if(e>i.length||e<-i.length)return warn("RiString.replaceChar: bad index="+e),this;e=0>e?e+=i.length:e,i=this.text();var r=i.substring(0,e),n=i.substring(e+1);return t&&(r+=t),this.text(r+n)},replaceFirst:function(e,t){if(e&&!is(e,S)&&e.global){var i="";e.ignoreCase&&(i+="i"),e.multiline&&(i+="m"),e.sticky&&(i+="y"),e=new RegExp(e.source,i)}return this._text=this._text.replace(e,t),this},replaceAll:function(e,t){var i="g";return e&&(t||""===t)&&(!is(e,S)&&e.source?(e.ignoreCase&&(i+="i"),e.multiline&&(i+="m"),e.sticky&&(i+="y"),e=e.source):e=escapeRegExp(e),this._text=this._text.replace(new RegExp(e,i),t)),this},removeWord:function(e){return this.replaceWord(e,E)},insertWord:function(e,t){var i=this.words();return 0>e&&(e+=i.length),t&&t.length>=0&&e>=0&&e<i.length&&(i[e]=t+SP+i[e],this.text(RiTa.untokenize(i))),this},toCharArray:function(){return this._text.split(RiTa.E)},replaceWord:function(e,t){var i=this.words();return 0>e&&(e+=i.length),(t||t===E)&&e>=0&&e<i.length&&(i[e]=t,this.text(RiTa.untokenize(i))),this},split:function(e,t){for(var i=this._text.split(e,t),r=[],n=0;n<i.length;n++)i[n]&&r.push(new RiString(i[n]));return r},startsWith:function(e){return 0===this.indexOf(e)},substr:function(e,t){return this._text.substr(e,t)},substring:function(e,t){return this._text.substring(e,t)},toLowerCase:function(){return this.text(this._text.toLowerCase())},toString:function(){return"RiString["+this._text+"]"},toUpperCase:function(){return this.text(this._text.toUpperCase())},trim:function(){return this.text(trim(this._text))},charAt:function(e){return this._text.charAt(e)},concat:function(e){return this._text.concat(e.text())}};var RiGrammar=makeClass();RiGrammar.START_RULE="<start>",RiGrammar.PROB_PATT=/(.*[^\s])\s*\[([0-9.]+)\](.*)/,RiGrammar.EXEC_PATT=/(.*?)(`[^`]+?\(.*?\);?`)(.*)/,RiGrammar.STRIP_TICKS=/`([^`]*)`/g,RiGrammar.OR_PATT=/\s*\|\s*/,RiGrammar.prototype={init:function(e){this._rules={},this.execDisabled=!1,e&&(is(e,S)||is(e,O)&&typeof e.loadStrings!==F)&&this.load(e)},ready:function(e){return okeys(this._rules).length>0},loadFrom:function(e,t){RiTa.loadString(e,function(e){this.load(e),is(t,F)&&t(e)}.bind(this),"\n")},load:function(e){if(this.reset(),is(e,S)){if("undefined"!=typeof YAML)try{e=YAML.parse(e)}catch(t){warn("YAML parsing failed, trying JSON")}if(!is(e,O))try{e=JSON.parse(e)}catch(t){var i=t}}if(!i&&is(e,O)){for(var r in e)this.addRule(r,e[r]);return this}if("undefined"!=typeof YAML)err("Grammar appears to be invalid JSON/YAML, please check it! (http://jsonlint.com/ or http://yamllint.com/)",e);else{var n=RiTa.env()===RiTa.NODE,s=n?"require":"include",o=n?"YAML = require('yamljs')":'<script src="yaml.min.js"></script>';err("Grammar appears to be invalid JSON, please check it at http://jsonlint.com/. If you are using YAML, be sure to "+s+" yamljs (https://github.com/jeremyfa/yaml.js), e.g. "+o,e)}},addRule:function(e,t,i){var r=!1;i=i||1,r&&log('addRule: "'+e+'" : "'+t+'"       ['+get(t)+"]");var n=t;is(t,A)||(n=t.split(RiGrammar.OR_PATT));for(var s=0;s<n.length;s++){var o=n[s],a=i,l=RiGrammar.PROB_PATT.exec(o);if(l){if(r)for(log("Found weight for "+o),s=0;s<l.length;s++)log("  "+s+") '"+l[s]+"'");o=l[1]+l[3],a=l[2],r&&log("weight="+a+" rule='"+o+"'")}if(this.hasRule(e)){r&&log("rule exists");var u=this._rules[e];u[o]=a}else{var h={};h[o]=a,this._rules[e]=h,r&&log("added rule: "+e)}}return this},removeRule:function(e){return delete this._rules[e],this},_copy:function(){var e=RiGrammar();for(var t in this._rules)e._rules[t]=this._rules[t];return e},reset:function(){return this._rules={},this},doRule:function(e){var t=0,i=E,r=this._rules[e];if(!r)return null;for(i in r)t++;return t?1==t?i:this._getStochasticRule(r):null},getGrammar:function(){var e=E,t="\n";for(var i in this._rules){e+=i+t;var r=this._rules[i];for(var n in r)e+="  '"+n+"' ["+r[n]+"]"+t}return RiTa.chomp(e)},print:function(){if(console){var e="\n------------------------------";console.log(e+"\n"+this.getGrammar()+e)}return this},hasRule:function(e){return"undefined"!=typeof this._rules[e]},expandWith:function(e,t){var i,r=this._copy(),n=!1;for(i in r._rules)if(i===t){var s={};s[e]=1,r._rules[i]=s,n=!0}n||err("Rule '"+t+"' not found in grammar");var o,a=1e3;for(o=0;a>o;o++){var l=r.expand();if(l.indexOf(e)>-1)return l}err("RiGrammar failed to complete after "+o+" tries\n")},expand:function(e){return this.expandFrom(RiGrammar.START_RULE,e)},expandFrom:function(e,t){okeys(this._rules).length||err("(RiGrammar) No grammar rules found!"),this.hasRule(e)||err("Rule not found: "+e+"\nRules:\n"+JSON.stringify(this._rules));for(var i,r,n,s=0,o=1e3;++s<o;){var a=this._expandRule(e);if(a&&a.length)e=a;else{if(this.execDisabled)break;if(i=RiGrammar.EXEC_PATT.exec(e),!i||!i.length)break;if(i.length>2){if(r=i[2],2!=this._countTicks(r))return warn("Unable to parse recursive exec: "+r+"..."),null;if(n=this._handleExec(r,t),!n)break;e=i[1]+n,i.length>3&&(e+=i[3])}}}return s>=o&&log("[WARN] max number of iterations reached: "+o),RiTa.unescapeHTML(e)},_countTicks:function(e){for(var t=0,i=0;i<e.length;i++)"`"==e.charAt(i)&&t++;return t},openEditor:function(){return warn("Editor not yet implemented in JavaScript"),this},_handleExec:function(input,context){if(!input||!input.length)return null;var res,exec=input.replace(RiGrammar.STRIP_TICKS,"$1");try{return res=eval(exec),res?res+E:null}catch(e){var parts=exec.split("(");if(parts&&2==parts.length){var funName=parts[0],argStr=parts[1].replace(/\)/,E),g=context;if(g||"undefined"==typeof window||(g=window),g&&g[funName]&&is(g[funName],F)){
var args=argStr.split(",");return res=g[funName].apply(g,args),res?res+E:null}}return warn("RiGrammar failed parsing: "+input+"\n  -> "+e.message),null}},_expandRule:function(e){var t,i,r,n,s,o=0;o&&log("_expandRule("+e+")");for(var a in this._rules)if(t=this._rules[a],o&&log("  name="+a+"  entry="+t+"  prod="+e+"  idx="+i),i=e.indexOf(a),i>=0)return r=e.substring(0,i)||E,n=this.doRule(a)||E,s=e.substring(i+a.length)||E,o&&log("  pre="+r+"  expanded="+n+"  post="+s+"  result="+r+n+s),r+n+s;return null},_getStochasticRule:function(e){var t,i=!1;i&&log("_getStochasticRule("+e+")");var r,n=Math.random(),s=0;for(t in e)s+=parseFloat(e[t]);i&&log("total="+s+"p="+n);for(t in e){i&&log("  name="+t);var o=e[t]/s;if(i&&log("amt="+o),o>n){r=t,i&&log("hit!="+t);break}n-=o}return r}};var RiTaEvent=makeClass();RiTaEvent._callbacksDisabled=!1,RiTaEvent.ID=0,RiTaEvent.prototype={init:function(e,t,i){is(e,O)||ok(e,S),this._id=++RiTaEvent.ID,this._data=i,this._source=e,this._type=t||RiTa.UNKNOWN},toString:function(){var e="RiTaEvent[#"+this._id+" type=("+this._type+") source="+this._source.toString();return e+=this._data?" data-length="+this._data.toString().length:e+=" data=null",e+"]"},isType:function(e){return this._type===e},_fire:function(e){if(e=e||window.onRiTaEvent,e&&is(e,F))try{return e(this),this}catch(t){RiTaEvent._callbacksDisabled=!0;var i="RiTaEvent: error calling '"+e+"': "+t;throw is(e,S)&&(i+=" Callback must be a function in JS!"),warn(i),t}}};var StringTokenizer=makeClass();StringTokenizer.prototype={init:function(e,t){this.idx=0,this.text=e,this.delim=t||" ",this.tokens=e.split(t)},nextToken:function(){return this.idx<this.tokens.length?this.tokens[this.idx++]:null}};var TextNode=makeClass();TextNode.prototype={init:function(e,t){this.count=0,this.children={},this.parent=e,this.token=t},pathFromRoot:function(e){for(var t=this;;){if(t.isRoot())break;e.push(t.token),t=t.parent}},selectChild:function(e,t){var i=t||!0;return this.children?this._select(this.childNodes(e),i):null},_select:function(e,t){if(!e)throw TypeError("bad arg to '_select()'");return t=t||!1,t?this._probabalisticSelect(e):e[Math.floor(Math.random()*e.length)]},_probabalisticSelect:function(e){if(!e)throw TypeError("bad arg to '_probabalisticSelect()'");if(!e.length)return null;if(1==e.length)return e[0];for(var t=0,i=Math.random(),r=0;r<e.length;r++)if(t+=e[r].probability(),t>i)return e[r];err("Invalid State in RiTa.probabalisticSelect()")},addChild:function(e,t){t=t||1;var i=this.children[e];return i?i.count++:(i=new TextNode(this,e),i.count=t,this.children[e]=i),i},asTree:function(e){var t=this.token+" ";return this.isRoot()||(t+="("+this.count+")->"),t+="{",this.isLeaf()?t+"}":this.childrenToString(this,t,1,e)},isRoot:function(){return!this.parent},isLeaf:function(){return 0===this.childCount()},probability:function(){return this.count/this.siblingCount()},childNodes:function(e){if(!this.children)return EA;e=is(e,S)?new RegExp(e):e;var t=[];for(var i in this.children){var r=this.children[i];(!e||r&&r.token&&r.token.search(e)>-1)&&t.push(r)}return t},siblingCount:function(){return this.parent||err("Illegal siblingCount on ROOT!"),this.parent.childCount()},childCount:function(){if(!this.children)return 0;var e=0;for(var t in this.children)t&&this.children[t]&&(e+=this.children[t].count);return e},lookup:function(e){return e?(e=typeof e!=S&&e.token?e.token:e,e?this.children[e]:null):null},childrenToString:function(e,t,i,r){var n,s,o,a=e,l=[],u=null,h="\n";r=r||!1;for(o in e.children)l.push(e.children[o]);if(!l.length)return t;for(r&&l.sort(),s=0;i>s;s++)h+="  ";for(n=0;n<l.length&&(u=l[n],u);n++){var c=u.token;c&&("\n"==c&&(c="\\n"),"\r"==c&&(c="\\r"),"	"==c&&(c="\\t"),"\r\n"==c&&(c="\\r\\n")),t+=h+"'"+c+"'",u.count||err("ILLEGAL FREQ: "+u.count+" -> "+a.token+","+u.token),u.isRoot()||(t+=" ["+u.count+",p="+u.probability().toFixed(3)+"]->{"),u.children?t=this.childrenToString(u,t,i+1,r):t+="}"}for(h="\n",s=0;i-1>s;s++)h+="  ";return t+h+"}"},toString:function(){return"[ "+this.token+" ("+this.count+"/"+this.probability().toFixed(3)+"%)]"}};var Conjugator=makeClass();Conjugator.prototype={init:function(){this.perfect=this.progressive=this.passive=this.interrogative=!1,this.tense=RiTa.PRESENT_TENSE,this.person=RiTa.FIRST_PERSON,this.number=RiTa.SINGULAR,this.form=RiTa.NORMAL},conjugate:function(e,t){var i,r,n,s,o,a=[];if(!e||!e.length)return E;if(!t)return e;if(i=e.toLowerCase(),("am"===i||"are"===i||"is"===i||"was"===i||"were"===i)&&(i="be"),s=i,t.number&&(this.number=t.number),t.person&&(this.person=t.person),t.tense&&(this.tense=t.tense),t.form&&(this.form=t.form),t.passive&&(this.passive=t.passive),t.progressive&&(this.progressive=t.progressive),t.interrogative&&(this.interrogative=t.interrogative),t.perfect&&(this.perfect=t.perfect),this.form==RiTa.INFINITIVE&&(n="to"),this.tense==RiTa.FUTURE_TENSE&&(n="will"),this.passive&&(a.push(this.getPastParticiple(s)),s="be"),this.progressive&&(a.push(this.getPresentParticiple(s)),s="be"),this.perfect&&(a.push(this.getPastParticiple(s)),s="have"),n&&(a.push(s),s=null),s)if(this.form===RiTa.GERUND){var l=this.getPresentParticiple(s);a.push(l)}else this.interrogative&&"be"!=s&&a.length<1?a.push(s):(o=this.getVerbForm(s,this.tense,this.person,this.number),a.push(o));n&&a.push(n),r=E;for(var u=0;u<a.length;u++)r=a[u]+" "+r;return endsWith(r,"peted")&&err("Unexpected output: "+this.toString()),trim(r)},checkRules:function(e,t){var i,r=(e.name,e.rules),n=e.defaultRule;if(r||err("no rule: "+e.name+" of "+t),inArray(MODALS,t))return t;for(var s=0;s<r.length;s++)if(r[s].applies(t)){var o=r[s].fire(t);return o}return e.doubling&&inArray(VERB_CONS_DOUBLING,t)&&(t=this.doubleFinalConsonant(t)),i=n.fire(t)},doubleFinalConsonant:function(e){var t=e.charAt(e.length-1);return e+t},getPast:function(e,t,i){if("be"==e.toLowerCase())switch(i){case RiTa.SINGULAR:switch(t){case RiTa.FIRST_PERSON:break;case RiTa.THIRD_PERSON:return"was";case RiTa.SECOND_PERSON:return"were"}break;case RiTa.PLURAL:return"were"}var r=this.checkRules(PAST_TENSE_RULESET,e);return r},getPresent:function(e,t,i){if(t=t||this.person,i=i||this.number,t==RiTa.THIRD_PERSON&&i==RiTa.SINGULAR)return this.checkRules(PRESENT_TENSE_RULESET,e);if("be"==e){if(i!=RiTa.SINGULAR)return"are";switch(t){case RiTa.FIRST_PERSON:return"am";case RiTa.SECOND_PERSON:return"are";case RiTa.THIRD_PERSON:return"is"}}return e},getPresentParticiple:function(e){return strOk(e)?this.checkRules(PRESENT_PARTICIPLE_RULESET,e):E},getPastParticiple:function(e){var t=strOk(e)?this.checkRules(PAST_PARTICIPLE_RULESET,e):E;return t},getVerbForm:function(e,t,i,r){switch(t){case RiTa.PRESENT_TENSE:return this.getPresent(e,i,r);case RiTa.PAST_TENSE:return this.getPast(e,i,r);default:return e}},toString:function(){return"  ---------------------\n  Passive = "+this.passive+"\n  Perfect = "+this.perfect+"\n  Progressive = "+this.progressive+"\n  ---------------------\n  Number = "+this.number+"\n  Person = "+this.person+"\n  Tense = "+this.tense+"\n  ---------------------\n"}};var PosTagger={UNKNOWN:["???","unknown"],N:["n","NOUN_KEY"],V:["v","VERB_KEY"],R:["r","ADVERB_KEY"],A:["a","ADJECTIVE_KEY"],CC:["cc","Coordinating conjunction"],CD:["cd","Cardinal number"],DT:["dt","Determiner"],EX:["ex","Existential there"],FW:["fw","Foreign word"],IN:["in","Preposition or subordinating conjunction"],JJ:["jj","Adjective"],JJR:["jjr","Adjective, comparative"],JJS:["jjs","Adjective, superlative"],LS:["ls","List item marker"],MD:["md","Modal"],NN:["nn","Noun, singular or mass"],NNS:["nns","Noun, plural"],NNP:["nnp","Proper noun, singular"],NNPS:["nnps","Proper noun, plural"],PDT:["pdt","Predeterminer"],POS:["pos","Possessive ending"],PRP:["prp","Personal pronoun"],PRP$:["prp$","Possessive pronoun (prolog version PRP-S)"],RB:["rb","Adverb"],RBR:["rbr","Adverb, comparative"],RBS:["rbs","Adverb, superlative"],RP:["rp","Particle"],SYM:["sym","Symbol"],TO:["to","to"],UH:["uh","Interjection"],VB:["vb","Verb, base form"],VBD:["vbd","Verb, past tense"],VBG:["vbg","Verb, gerund or present participle"],VBN:["vbn","Verb, past participle"],VBP:["vbp","Verb, non-3rd person singular present"],VBZ:["vbz","Verb, 3rd person singular present"],WDT:["wdt","Wh-determiner"],WP:["wp","Wh-pronoun"],WP$:["wp$","Possessive wh-pronoun (prolog version WP-S)"],WRB:["wrb","Wh-adverb"],TAGS:["cc","cd","dt","ex","fw","in","jj","jjr","jjs","ls","md","nn","nns","nnp","nnps","pdt","pos","prp","prp$","rb","rbr","rbs","rp","sym","to","uh","vb","vbd","vbg","vbn","vbp","vbz","wdt","wp","wp$","wrb","unknown"],NOUNS:["nn","nns","nnp","nnps"],VERBS:["vb","vbd","vbg","vbn","vbp","vbz"],ADJ:["jj","jjr","jjs"],ADV:["rb","rbr","rbs","rp"],NOLEX_WARNED:!1,isVerb:function(e){return inArray(this.VERBS,e)},isNoun:function(e){return inArray(this.NOUNS,e)},isAdverb:function(e){return inArray(this.ADV,e)},isAdj:function(e){return inArray(this.ADJ,e)},isTag:function(e){return inArray(this.TAGS,e)},hasTag:function(e,t){ok(e,A);var i=e.join();return i.indexOf(t)>-1},tag:function(e){var t,i=[],r=[];RiLexicon.enabled?t=RiTa._lexicon():RiTa.SILENT||this.NOLEX_WARNED||(this.NOLEX_WARNED=!0,console.warn("No RiLexicon found: part-of-speech tagging will be inaccurate!")),e=is(e,A)?e:[e];for(var n=0,s=e.length;s>n;n++)if(e[n].length<1)i.push(E);else if(1!=e[n].length){var o=t&&t._getPosArr(e[n]);o&&o.length?(i.push(o[0]),r[n]=o):(r[n]=[],i.push(endsWith(e[n],"s")?"nns":"nn"))}else i.push(this._handleSingleLetter(e[n]));return this._applyContext(e,i,r)},_handleSingleLetter:function(e){var t=e;return"a"===e||"A"===e?t="dt":"I"===e?t="prp":e>="0"&&"9">=e&&(t="cd"),t},_applyContext:function(e,t,i){for(var r=startsWith,n=endsWith,s=0,o=0,a=e.length;a>o;o++)o>0&&"dt"==t[o-1]&&(r(t[o],"vb")?(s&&log("PosTagger: changing verb to noun: "+e[o]),t[o]="nn"):r(t[o],"rb")&&(s&&log("PosTagger: custom tagged '"+e[o]+"', "+t[o]),t[o]=t[o].length>2?"jj"+t[o].charAt(2):"jj",s&&log(" -> "+t[o]))),r(t[o],"n")&&!i[o]&&isNum(e[o])&&(t[o]="cd"),r(t[o],"n")&&n(e[o],"ed")&&(t[o]="vbn"),n(e[o],"ly")&&(t[o]="rb"),r(t[o],"nn")&&n(e[o],"al")&&"mammal"!=e[o]&&(t[o]="jj"),o>0&&r(t[o],"nn")&&equalsIgnoreCase(e[o-1],"would")&&(t[o]="vb"),"nn"==t[o]&&e[o].match(/^.*[^s]s$/)&&(NULL_PLURALS.applies(e[o])||(t[o]="nns")),r(t[o],"nn")&&n(e[o],"ing")&&(this.hasTag(i[o],"vb")?t[o]="vbg":s&&log("[RiTa] PosTagger tagged '"+e[o]+"' as "+t[o])),o>0&&"nns"==t[o]&&this.hasTag(i[o],"vbz")&&t[o-1].match(/^(nn|prp|nnp)$/)&&(t[o]="vbz"),r(t[o],"nn")&&e[o].charAt(0)==e[o].charAt(0).toUpperCase()&&(t[o]=n(t[o],"s")?"nnps":"nnp");return t}};RiTa.stem_Porter=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},i="[^aeiou]",r="[aeiouy]",n=i+"[^aeiouy]*",s=r+"[aeiou]*",o="^("+n+")?"+s+n,a="^("+n+")?"+s+n+"("+s+")?$",l="^("+n+")?"+s+n+s+n,u="^("+n+")?"+r;return function(i){var s,h,c,d,p,g,R,f;return i.length<3?i:(d=i.substr(0,1),"y"==d&&(i=d+i.substr(1)),p=/^(.+?)(ss|i)es$/,g=/^(.+?)([^s])s$/,p.test(i)?i=i.replace(p,"$1$2"):g.test(i)&&(i=i.replace(g,"$1$2")),p=/^(.+?)eed$/,g=/^(.+?)(ed|ing)$/,p.test(i)?(s=p.exec(i),p=new RegExp(o),p.test(s[1])&&(p=/.$/,i=i.replace(p,E))):g.test(i)&&(s=g.exec(i),h=s[1],g=new RegExp(u),g.test(h)&&(i=h,g=/(at|bl|iz)$/,R=new RegExp("([^aeiouylsz])\\1$"),f=new RegExp("^"+n+r+"[^aeiouwxy]$"),g.test(i)?i+="e":R.test(i)?(p=/.$/,i=i.replace(p,E)):f.test(i)&&(i+="e"))),p=/^(.+?)y$/,p.test(i)&&(s=p.exec(i),h=s[1],p=new RegExp(u),p.test(h)&&(i=h+"i")),p=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,p.test(i)&&(s=p.exec(i),h=s[1],c=s[2],p=new RegExp(o),p.test(h)&&(i=h+e[c])),p=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,p.test(i)&&(s=p.exec(i),h=s[1],c=s[2],p=new RegExp(o),p.test(h)&&(i=h+t[c])),p=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,g=/^(.+?)(s|t)(ion)$/,p.test(i)?(s=p.exec(i),h=s[1],p=new RegExp(l),p.test(h)&&(i=h)):g.test(i)&&(s=g.exec(i),h=s[1]+s[2],g=new RegExp(l),g.test(h)&&(i=h)),p=/^(.+?)e$/,p.test(i)&&(s=p.exec(i),h=s[1],p=new RegExp(l),g=new RegExp(a),R=new RegExp("^"+n+r+"[^aeiouwxy]$"),(p.test(h)||g.test(h)&&!R.test(h))&&(i=h)),p=/ll$/,g=new RegExp(l),p.test(i)&&g.test(i)&&(p=/.$/,i=i.replace(p,E)),"y"==d&&(i=d.toLowerCase()+i.substr(1)),i)}}(),RiTa.stem_Pling=function(){function e(e,t){return e.substring(0,e.length-t.length)}function t(e){return e.indexOf("h")>0||e.indexOf("j")>0||e.indexOf("k")>0||e.indexOf("w")>0||e.indexOf("y")>0||e.indexOf("z")>0||e.indexOf("ou")>0||e.indexOf("sh")>0||e.indexOf("ch")>0||e._endsWith("aus")}function i(e){return e.indexOf("ph")>0||e.indexOf("y")>0&&e._endsWith("nges")}function r(r){var v=b[r];return v?v:a._arrayContains(r)?e(r,"a")+"on":o._arrayContains(r)?e(r,"a")+"um":h._arrayContains(r)?e(r,"ices")+"ix":l._arrayContains(r)?e(r,"i")+"o":n._arrayContains(r)?e(r,"s"):c._arrayContains(r)||r._endsWith("theses")?e(r,"es")+"is":u._arrayContains(r)?e(r,"i")+"us":r._endsWith("uses")&&(u._arrayContains(e(r,"uses")+"i")||"genuses"===r||"corpuses"===r)?e(r,"es"):p._arrayContains(r)?e(r,"ices")+"ex":r._endsWith("ois")||r._endsWith("itis")||s._arrayContains(r)||E._arrayContains(r)?r:r._endsWith("ina")?e(r,"en"):r._endsWith("ae")?e(r,"e"):r._endsWith("ata")?e(r,"ta"):r._endsWith("trices")?e(r,"trices")+"trix":!r._endsWith("us")||r._endsWith("eaus")||r._endsWith("ieus")||t(r)||g._arrayContains(r)?r._endsWith("teeth")?e(r,"teeth")+"tooth":r._endsWith("geese")?e(r,"geese")+"goose":r._endsWith("feet")?e(r,"feet")+"foot":r._endsWith("zoa")?e(r,"zoa")+"zoon":r._endsWith("eaux")?e(r,"x"):r._endsWith("ieux")?e(r,"x"):r._endsWith("nges")&&i(r)?e(r,"nges")+"nx":r._endsWith("shes")||r._endsWith("ches")&&!f._arrayContains(r)?e(r,"es"):!r._endsWith("sses")||R._arrayContains(r)||r._endsWith("mousses")?r._endsWith("xes")&&"axes"!==r?e(r,"es"):r._endsWith("nives")||r._endsWith("lives")&&!r._endsWith("olives")||r._endsWith("wives")?e(r,"ves")+"fe":r._endsWith("alves")&&!r._endsWith("valves")||r._endsWith("olves")&&!r._endsWith("solves")||r._endsWith("eaves")&&!r._endsWith("heaves")&&!r._endsWith("weaves")||r._endsWith("arves")?e(r,"ves")+"f":r._endsWith("ies")&&!m._arrayContains(r)?e(r,"ies")+"y":r._endsWith("oes")&&!d._arrayContains(r)?e(r,"es"):r._endsWith("ses")||r._endsWith("zes")?e(r,"es"):!r._endsWith("s")||r._endsWith("ss")||r._endsWith("is")?r:e(r,"s"):e(r,"es"):r}var n=["nurses","cruises"],s=["alias","asbestos","atlas","barracks","bathos","bias","breeches","britches","canvas","chaos","clippers","contretemps","corps","cosmos","crossroads","diabetes","ethos","gallows","gas","graffiti","headquarters","herpes","high-jinks","innings","jackanapes","lens","means","measles","mews","mumps","news","pathos","pincers","pliers","proceedings","rabies","rhinoceros","sassafras","scissors","series","shears","species","tuna"],o=["addenda","agenda","aquaria","bacteria","candelabra","compendia","consortia","crania","curricula","data","desiderata","dicta","emporia","enconia","errata","extrema","gymnasia","honoraria","interregna","lustra","maxima","media","memoranda","millenia","minima","momenta","optima","ova","phyla","quanta","rostra","spectra","specula","stadia","strata","symposia","trapezia","ultimata","vacua","vela"],a=["aphelia","asyndeta","automata","criteria","hyperbata","noumena","organa","perihelia","phenomena","prolegomena"],l=["alti","bassi","canti","contralti","crescendi","libretti","soli","soprani","tempi","virtuosi"],u=["alumni","bacilli","cacti","foci","fungi","genii","hippopotami","incubi","nimbi","nuclei","nucleoli","octopi","radii","stimuli","styli","succubi","syllabi","termini","tori","umbilici","uteri"],h=["appendices","cervices"],c=["analyses","axes","bases","crises","diagnoses","ellipses","em_PHASEs","neuroses","oases","paralyses","synopses"],d=["aloes","backhoes","beroes","canoes","chigoes","cohoes","does","felloes","floes","foes","gumshoes","hammertoes","hoes","hoopoes","horseshoes","leucothoes","mahoes","mistletoes","oboes","overshoes","pahoehoes","pekoes","roes","shoes","sloes","snowshoes","throes","tic-tac-toes","tick-tack-toes","ticktacktoes","tiptoes","tit-tat-toes","toes","toetoes","tuckahoes","woes"],p=["apices","codices","cortices","indices","latices","murices","pontifices","silices","simplices","vertices","vortices"],g=["apercus","barbus","cornus","ecrus","emus","fondus","gnus","iglus","mus","nandus","napus","poilus","quipus","snafus","tabus","tamandus","tatus","timucus","tiramisus","tofus","tutus"],R=["bouillabaisses","coulisses","crevasses","crosses","cuisses","demitasses","ecrevisses","fesses","finesses","fosses","impasses","lacrosses","largesses","masses","noblesses","palliasses","pelisses","politesses","posses","tasses","wrasses"],f=["adrenarches","attaches","avalanches","barouches","brioches","caches","caleches","caroches","cartouches","cliches","cloches","creches","demarches","douches","gouaches","guilloches","headaches","heartaches","huaraches","menarches","microfiches","moustaches","mustaches","niches","panaches","panoches","pastiches","penuches","pinches","postiches","psyches","quiches","schottisches","seiches","soutaches","synecdoches","thelarches","troches"],E=["aerobatics","aerobics","aerodynamics","aeromechanics","aeronautics","alphanumerics","animatronics","apologetics","architectonics","astrodynamics","astronautics","astrophysics","athletics","atmospherics","autogenics","avionics","ballistics","bibliotics","bioethics","biometrics","bionics","bionomics","biophysics","biosystematics","cacogenics","calisthenics","callisthenics","catoptrics","civics","cladistics","cryogenics","cryonics","cryptanalytics","cybernetics","cytoarchitectonics","cytogenetics","diagnostics","dietetics","dramatics","dysgenics","econometrics","economics","electromagnetics","electronics","electrostatics","endodontics","enterics","ergonomics","eugenics","eurhythmics","eurythmics","exodontics","fibreoptics","futuristics","genetics","genomics","geographics","geophysics","geopolitics","geriatrics","glyptics","graphics","gymnastics","hermeneutics","histrionics","homiletics","hydraulics","hydrodynamics","hydrokinetics","hydroponics","hydrostatics","hygienics","informatics","kinematics","kinesthetics","kinetics","lexicostatistics","linguistics","lithoglyptics","liturgics","logistics","macrobiotics","macroeconomics","magnetics","magnetohydrodynamics","mathematics","metamathematics","metaphysics","microeconomics","microelectronics","mnemonics","morphophonemics","neuroethics","neurolinguistics","nucleonics","numismatics","obstetrics","onomastics","orthodontics","orthopaedics","orthopedics","orthoptics","paediatrics","patristics","patristics","pedagogics","pediatrics","periodontics","pharmaceutics","pharmacogenetics","pharmacokinetics","phonemics","phonetics","phonics","photomechanics","physiatrics","pneumatics","poetics","politics","pragmatics","prosthetics","prosthodontics","proteomics","proxemics","psycholinguistics","psychometrics","psychonomics","psychophysics","psychotherapeutics","robotics","semantics","semiotics","semitropics","sociolinguistics","stemmatics","strategics","subtropics","systematics","tectonics","telerobotics","therapeutics","thermionics","thermodynamics","thermostatics"],m=["aeries","anomies","aunties","baddies","beanies","birdies","boccies","bogies","bolshies","bombies","bonhomies","bonxies","booboisies","boogies","boogie-woogies","bookies","booties","bosies","bourgeoisies","brasseries","brassies","brownies","budgies","byrnies","caddies","calories","camaraderies","capercaillies","capercailzies","cassies","catties","causeries","charcuteries","chinoiseries","collies","commies","cookies","coolies","coonties","cooties","corries","coteries","cowpies","cowries","cozies","crappies","crossties","curies","dachsies","darkies","dassies","dearies","dickies","dies","dixies","doggies","dogies","dominies","dovekies","eyries","faeries","falsies","floozies","folies","foodies","freebies","gaucheries","gendarmeries","genies","ghillies","gillies","goalies","goonies","grannies","grotesqueries","groupies","hankies","hippies","hoagies","honkies","hymies","indies","junkies","kelpies","kilocalories","knobkerries","koppies","kylies","laddies","lassies","lies","lingeries","magpies","magpies","marqueteries","mashies","mealies","meanies","menageries","millicuries","mollies","facts1","moxies","neckties","newbies","nighties","nookies","oldies","organdies","panties","parqueteries","passementeries","patisseries","pies","pinkies","pixies","porkpies","potpies","prairies","preemies","premies","punkies","pyxies","quickies","ramies","reveries","rookies","rotisseries","scrapies","sharpies","smoothies","softies","stoolies","stymies","swaggies","sweeties","talkies","techies","ties","tooshies","toughies","townies","veggies","walkie-talkies","wedgies","weenies","weirdies","yardies","yuppies","zombies"],b=["beefs","beef","beeves","beef","brethren","brother","busses","bus","cattle","cattlebeast","children","child","corpora","corpus","ephemerides","ephemeris","firemen","fireman","genera","genus","genies","genie","genii","genie","kine","cow","lice","louse","men","man","mice","mouse","mongooses","mongoose","monies","money","mythoi","mythos","octopodes","octopus","octopuses","octopus","oxen","ox","people","person","soliloquies","soliloquy","throes","throes","trilbys","trilby","women","woman"];return function(e){return r(e.toLowerCase())}}(),Array.prototype._arrayContains=function(e){return Array.prototype.indexOf(e)>-1},String.prototype._endsWith=function(e){return-1!==this.indexOf(e,this.length-e.length)};var MinEditDist={_min3:function(e,t,i){var r=e;return r>t&&(r=t),r>i&&(r=i),r},_computeRawArray:function(e,t){var i,r,n,s,o,a,l,u=[];if(!e.length)return t.length;if(!t.length)return e.length;for(s=0,a=e.length;a>=s;s++)u[s]=[],u[s][0]=s;for(o=0,l=t.length;l>=o;o++)u[0][o]=o;for(s=1,a=e.length;a>=s;s++)for(i=e[s-1],o=1,l=t.length;l>=o;o++)r=t[o-1],n=i===r?0:1,u[s][o]=this._min3(u[s-1][o]+1,u[s][o-1]+1,u[s-1][o-1]+n);return u[e.length][t.length]},computeRaw:function(e,t){if(is(e,A))return this._computeRawArray(e,t);if(!e.length&&!t.length)return 0;var i,r,n,s,o,a=[],l=e.length,u=t.length;if(!l)return u;if(!u)return l;for(i=0;l>=i;i++)a[i]=[],a[i][0]=i;for(r=0;u>=r;r++)a[0][r]=r;for(i=1;l>=i;i++)for(s=e.charAt(i-1),r=1;u>=r;r++)o=t.charAt(r-1),n=s==o?0:1,a[i][r]=this._min3(a[i-1][r]+1,a[i][r-1]+1,a[i-1][r-1]+n);return a[l][u]},computeAdjusted:function(e,t){var i=get(e),r=get(e);if(i===r){if(r===S)return e.length||t.length?this.computeRaw(e,t)/Math.max(e.length,t.length):0;if(r===A)return e.length||t.length?this._computeRawArray(e,t)/Math.max(e.length,t.length):0}err("Unexpected args: "+e+"/"+t)}},Concorder=makeClass();Concorder.prototype={init:function(e,t){this.model=null,this.wordsToIgnore=[],this.ignoreCase=!1,this.ignoreStopWords=!1,this.ignorePunctuation=!1,t&&(t.ignoreCase&&(this.ignoreCase=!0),t.ignoreStopWords&&(this.ignoreStopWords=!0),t.ignorePunctuation&&(this.ignorePunctuation=!0),t.wordsToIgnore&&(this.wordsToIgnore=t.wordsToIgnore)),this.ignoreStopWords&&(this.wordsToIgnore=this.wordsToIgnore.concat(RiTa.STOP_WORDS)),this.words=is(e,A)?e:RiTa.tokenize(e)},count:function(e){var t=this.lookup(e);return null===t?0:t.count},concordance:function(){this.model||this.build();var e={};for(var t in this.model)e[t]=this.model[t].indexes.length;return e},kwic:function(e,t){var i=this.lookup(e),r=[];if(i)for(var n=i.indexes,s=0;s<n.length;s++){var o=this.words.slice(Math.max(0,n[s]-t),Math.min(this.words.length,n[s]+t+1));r[s]=RiTa.untokenize(o)}return r},build:function(){if(!this.words)throw Error("No text in model");this.model={};for(var e=(+new Date,0);e<this.words.length;e++){var t=this.words[e];if(!this.ignorable(t)){var i=this.lookup(t);i&&"object"==typeof i||(i={word:t,key:this.compareKey(t),indexes:[]},this.model[i.key]=i),i.indexes.push(e)}}},ignorable:function(e){if(this.ignorePunctuation&&RiTa.isPunctuation(e))return!0;for(var t=0;t<this.wordsToIgnore.length;t++){var i=this.wordsToIgnore[t];if(this.ignoreCase&&e.toUpperCase()===i.toUpperCase()||e===i)return!0}return!1},compareKey:function(e){return this.ignoreCase?e.toLowerCase():e},lookup:function(e){var t=this.compareKey(e);return this.model||this.build(),this.model[t]}};var RE=makeClass();RE.prototype={init:function(e,t,i){this.regex=new RegExp(e),this.offset=t,this.suffix=i||""},applies:function(e){return this.regex.test(trim(e))},fire:function(e){return this.truncate(trim(e))+this.suffix},analyze:function(e){return this.suffix!=E&&endsWith(e,this.suffix)?!0:!1},truncate:function(e){return 0===this.offset?e:e.substr(0,e.length-this.offset)}};var QUESTION_STARTS=["Was","What","When","Where","How","Which","If","Who","Is","Could","Might","Will","Does","Why","Are"],W_QUESTION_STARTS=["Was","What","When","Where","How","Which","Why","Who","Will"],PUNCTUATION_CLASS=/[�`~\"\/'_\-[\]{}()*+!?%&.,\\^$|#@<>|+=;:]/g,ONLY_PUNCT=/^[^0-9A-Za-z\s]*$/,DEFAULT_PLURAL_RULE=RE("^((\\w+)(-\\w+)*)(\\s((\\w+)(-\\w+)*))*$",0,"s"),ALL_PUNCT=/^[-[\]{}()*+!?%&.,\\^$|#@<>|+=;:]+$/g,NULL_PLURALS=RE("^(bantu|bengalese|bengali|beninese|boche|bonsai|digitalis|mess|burmese|chinese|colossus|congolese|discus|emphasis|gabonese|guyanese|japanese|javanese|lebanese|maltese|olympics|portuguese|senegalese|siamese|singhalese|innings|sinhalese|sioux|sudanese|swiss|taiwanese|togolese|vietnamese|aircraft|anopheles|apparatus|asparagus|barracks|bellows|bison|bluefish|bob|bourgeois|bream|brill|butterfingers|cargo|carp|catfish|chassis|clothes|chub|cod|codfish|coley|contretemps|corps|crawfish|crayfish|crossroads|cuttlefish|dace|deer|dice|dogfish|doings|dory|downstairs|eldest|earnings|economics|electronics|finnan|firstborn|fish|flatfish|flounder|fowl|fry|fries|works|globefish|goldfish|golf|grand|grief|gudgeon|gulden|haddock|hake|halibut|headquarters|herring|hertz|horsepower|goods|hovercraft|hundredweight|ironworks|jackanapes|kilohertz|kurus|kwacha|ling|lungfish|mackerel|means|megahertz|moorfowl|moorgame|mullet|nepalese|offspring|pampas|parr|pants|patois|pekinese|penn'orth|perch|pickerel|pike|pince-nez|plaice|precis|quid|rand|rendezvous|revers|roach|roux|salmon|samurai|series|seychelles|seychellois|shad|sheep|shellfish|smelt|spacecraft|species|starfish|stockfish|sunfish|superficies|sweepstakes|swordfish|tench|tennis|[a-z]+osis|[a-z]+itis|[a-z]+ness|tobacco|tope|triceps|trout|tuna|tunafish|tunny|turbot|trousers|undersigned|veg|waterfowl|waterworks|waxworks|whiting|wildfowl|woodworm|yen|aries|pisces|forceps|lieder|jeans|physics|mathematics|news|odds|politics|remains|surroundings|thanks|statistics|goods|aids|wildlife)$",0),SINGULAR_RULES=[NULL_PLURALS,RE("^(oxen|buses)$",2),RE("^(toes|taxis)$",1),RE("^series$",0),RE("(men|women)$",2,"an"),RE("^[lm]ice$",3,"ouse"),RE("^children",3),RE("^(appendices|indices|matrices)",3,"x"),RE("^(stimuli|alumni)$",1,"us"),RE("^(data)$",1,"um"),RE("^(memoranda|bacteria|curricula|minima|maxima|referenda|spectra|phenomena|criteria)$",1,"um"),RE("monies",3,"ey"),RE("people",4,"rson"),RE("^meninges|phalanges$",3,"x"),RE("schemata$",2,"s"),RE("^corpora$",3,"us"),RE("^(curi|formul|vertebr|larv|uln|alumn|signor|alg)ae$",1),RE("^apices|cortices$",4,"ex"),RE("^teeth$",4,"ooth"),RE("^feet$",3,"oot"),RE("femora",3,"ur"),RE("geese",4,"oose"),RE("crises",2,"is"),RE("(human|german|roman)$",0,"s")],C="[bcdfghjklmnpqrstvwxyz]",VL="[lraeiou]",PLURAL_RULES=[NULL_PLURALS,RE("^(piano|photo|solo|ego|tobacco|cargo|golf|grief)$",0,"s"),RE("^(wildlife)$",0,"s"),RE(C+"o$",0,"es"),RE(C+"y$",1,"ies"),RE("^ox$",0,"en"),RE("^(stimulus|alumnus)$",2,"i"),RE("^corpus$",2,"ora"),RE("(xis|sis)$",2,"es"),RE("([zsx]|ch|sh)$",0,"es"),RE(VL+"fe$",2,"ves"),RE(VL+"f$",1,"ves"),RE("(eu|eau)$",0,"x"),RE("(man|woman)$",2,"en"),RE("money$",2,"ies"),RE("person$",4,"ople"),RE("motif$",0,"s"),RE("^meninx|phalanx$",1,"ges"),RE("schema$",0,"ta"),RE("^bus$",0,"ses"),RE("child$",0,"ren"),RE("^(curi|formul|vertebr|larv|uln|alumn|signor|alg)a$",0,"e"),RE("^(maharaj|raj|myn|mull)a$",0,"hs"),RE("^aide-de-camp$",8,"s-de-camp"),RE("^apex|cortex$",2,"ices"),RE("^weltanschauung$",0,"en"),RE("^lied$",0,"er"),RE("^tooth$",4,"eeth"),RE("^[lm]ouse$",4,"ice"),RE("^foot$",3,"eet"),RE("femur",2,"ora"),RE("goose",4,"eese"),RE("(human|german|roman)$",0,"s"),RE("^(monarch|loch|stomach)$",0,"s"),RE("^(taxi|chief|proof|ref|relief|roof|belief)$",0,"s"),RE("^(co|no)$",0,"'s"),RE("^blond$",0,"es"),RE("^(memorandum|bacterium|curriculum|minimum|maximum|referendum|spectrum|phenomenon|criterion)$",2,"a"),RE("^(appendix|index|matrix)",2,"ices")],ANY_STEM="^((\\w+)(-\\w+)*)(\\s((\\w+)(-\\w+)*))*$",CONS="[bcdfghjklmnpqrstvwxyz]",VERBAL_PREFIX="((be|with|pre|un|over|re|mis|under|out|up|fore|for|counter|co|sub)(-?))",AUXILIARIES=["do","have","be"],MODALS=["shall","would","may","might","ought","should"],SYMBOLS=["!","?","$","%","*","+","-","="],ING_FORM_RULES=[RE(CONS+"ie$",2,"ying",1),RE("[^ie]e$",1,"ing",1),RE("^bog-down$",5,"ging-down",0),RE("^chivy$",1,"vying",0),RE("^trek$",1,"cking",0),RE("^bring$",0,"ing",0),RE("^be$",0,"ing",0),RE("^age$",1,"ing",0),RE("(ibe)$",1,"ing",0)],PAST_PARTICIPLE_RULES=[RE(CONS+"y$",1,"ied",1),RE("^"+VERBAL_PREFIX+"?(bring)$",3,"ought",0),RE("^"+VERBAL_PREFIX+"?(take|rise|strew|blow|draw|drive|know|give|arise|gnaw|grave|grow|hew|know|mow|see|sew|throw|prove|saw|quartersaw|partake|sake|shake|shew|show|shrive|sightsee|strew|strive)$",0,"n",0),RE("^"+VERBAL_PREFIX+"?[gd]o$",0,"ne",1),RE("^(beat|eat|be|fall)$",0,"en",0),RE("^(have)$",2,"d",0),RE("^"+VERBAL_PREFIX+"?bid$",0,"den",0),RE("^"+VERBAL_PREFIX+"?[lps]ay$",1,"id",1),RE("^behave$",0,"d",0),RE("^"+VERBAL_PREFIX+"?have$",2,"d",1),RE("(sink|slink|drink|shrink|stink)$",3,"unk",0),RE("(([sfc][twlp]?r?|w?r)ing|hang)$",3,"ung",0),RE("^"+VERBAL_PREFIX+"?(shear|swear|bear|wear|tear)$",3,"orn",0),RE("^"+VERBAL_PREFIX+"?(bend|spend|send|lend)$",1,"t",0),RE("^"+VERBAL_PREFIX+"?(weep|sleep|sweep|creep|keep$)$",2,"pt",0),RE("^"+VERBAL_PREFIX+"?(sell|tell)$",3,"old",0),RE("^(outfight|beseech)$",4,"ought",0),RE("^bethink$",3,"ought",0),RE("^buy$",2,"ought",0),RE("^aby$",1,"ought",0),RE("^tarmac",0,"ked",0),RE("^abide$",3,"ode",0),RE("^"+VERBAL_PREFIX+"?(speak|(a?)wake|break)$",3,"oken",0),RE("^backbite$",1,"ten",0),RE("^backslide$",1,"den",0),RE("^become$",3,"ame",0),RE("^begird$",3,"irt",0),RE("^outlie$",2,"ay",0),RE("^rebind$",3,"ound",0),RE("^relay$",2,"aid",0),RE("^shit$",3,"hat",0),RE("^bereave$",4,"eft",0),RE("^foreswear$",3,"ore",0),RE("^overfly$",1,"own",0),RE("^beget$",2,"otten",0),RE("^begin$",3,"gun",0),RE("^bestride$",1,"den",0),RE("^bite$",1,"ten",0),RE("^bleed$",4,"led",0),RE("^bog-down$",5,"ged-down",0),RE("^bind$",3,"ound",0),RE("^(.*)feed$",4,"fed",0),RE("^breed$",4,"red",0),RE("^brei",0,"d",0),RE("^bring$",3,"ought",0),RE("^build$",1,"t",0),RE("^come",0),RE("^catch$",3,"ught",0),RE("^chivy$",1,"vied",0),RE("^choose$",3,"sen",0),RE("^cleave$",4,"oven",0),RE("^crossbreed$",4,"red",0),RE("^deal",0,"t",0),RE("^dow$",1,"ught",0),RE("^dream",0,"t",0),RE("^dig$",3,"dug",0),RE("^dwell$",2,"lt",0),RE("^enwind$",3,"ound",0),RE("^feel$",3,"elt",0),RE("^flee$",2,"ed",0),RE("^floodlight$",5,"lit",0),RE("^fly$",1,"own",0),RE("^forbear$",3,"orne",0),RE("^forerun$",3,"ran",0),RE("^forget$",2,"otten",0),RE("^fight$",4,"ought",0),RE("^find$",3,"ound",0),RE("^freeze$",4,"ozen",0),RE("^gainsay$",2,"aid",0),RE("^gin$",3,"gan",0),RE("^gen-up$",3,"ned-up",0),RE("^ghostwrite$",1,"ten",0),RE("^get$",2,"otten",0),RE("^grind$",3,"ound",0),RE("^hacksaw",0,"n",0),RE("^hear",0,"d",0),RE("^hold$",3,"eld",0),RE("^hide$",1,"den",0),RE("^honey$",2,"ied",0),RE("^inbreed$",4,"red",0),RE("^indwell$",3,"elt",0),RE("^interbreed$",4,"red",0),RE("^interweave$",4,"oven",0),RE("^inweave$",4,"oven",0),RE("^ken$",2,"ent",0),RE("^kneel$",3,"elt",0),RE("^lie$",2,"ain",0),RE("^leap$",0,"t",0),RE("^learn$",0,"t",0),RE("^lead$",4,"led",0),RE("^leave$",4,"eft",0),RE("^light$",5,"lit",0),RE("^lose$",3,"ost",0),RE("^make$",3,"ade",0),RE("^mean",0,"t",0),RE("^meet$",4,"met",0),RE("^misbecome$",3,"ame",0),RE("^misdeal$",2,"alt",0),RE("^mishear$",1,"d",0),RE("^mislead$",4,"led",0),RE("^misunderstand$",3,"ood",0),RE("^outbreed$",4,"red",0),RE("^outrun$",3,"ran",0),RE("^outride$",1,"den",0),RE("^outshine$",3,"one",0),RE("^outshoot$",4,"hot",0),RE("^outstand$",3,"ood",0),RE("^outthink$",3,"ought",0),RE("^outgo$",2,"went",0),RE("^overbear$",3,"orne",0),RE("^overbuild$",3,"ilt",0),RE("^overcome$",3,"ame",0),RE("^overfly$",2,"lew",0),RE("^overhear$",2,"ard",0),RE("^overlie$",2,"ain",0),RE("^overrun$",3,"ran",0),RE("^override$",1,"den",0),RE("^overshoot$",4,"hot",0),RE("^overwind$",3,"ound",0),RE("^overwrite$",1,"ten",0),RE("^plead$",2,"d",0),RE("^rebuild$",3,"ilt",0),RE("^red$",3,"red",0),RE("^redo$",1,"one",0),RE("^remake$",3,"ade",0),RE("^resit$",3,"sat",0),RE("^rethink$",3,"ought",0),RE("^rewind$",3,"ound",0),RE("^rewrite$",1,"ten",0),RE("^ride$",1,"den",0),RE("^reeve$",4,"ove",0),RE("^sit$",3,"sat",0),RE("^shoe$",3,"hod",0),RE("^shine$",3,"one",0),RE("^shoot$",4,"hot",0),RE("^ski$",1,"i'd",0),RE("^slide$",1,"den",0),RE("^smite$",1,"ten",0),RE("^seek$",3,"ought",0),RE("^spit$",3,"pat",0),RE("^speed$",4,"ped",0),RE("^spellbind$",3,"ound",0),RE("^spoil$",2,"ilt",0),RE("^spotlight$",5,"lit",0),RE("^spin$",3,"pun",0),RE("^steal$",3,"olen",0),RE("^stand$",3,"ood",0),RE("^stave$",3,"ove",0),RE("^stride$",1,"den",0),RE("^strike$",3,"uck",0),RE("^stick$",3,"uck",0),RE("^swell$",3,"ollen",0),RE("^swim$",3,"wum",0),RE("^teach$",4,"aught",0),RE("^think$",3,"ought",0),RE("^tread$",3,"odden",0),RE("^typewrite$",1,"ten",0),RE("^unbind$",3,"ound",0),RE("^underbuy$",2,"ought",0),RE("^undergird$",3,"irt",0),RE("^undergo$",1,"one",0),RE("^underlie$",2,"ain",0),RE("^undershoot$",4,"hot",0),RE("^understand$",3,"ood",0),RE("^unfreeze$",4,"ozen",0),RE("^unlearn",0,"t",0),RE("^unmake$",3,"ade",0),RE("^unreeve$",4,"ove",0),RE("^unstick$",3,"uck",0),RE("^unteach$",4,"aught",0),RE("^unthink$",3,"ought",0),RE("^untread$",3,"odden",0),RE("^unwind$",3,"ound",0),RE("^upbuild$",1,"t",0),RE("^uphold$",3,"eld",0),RE("^upheave$",4,"ove",0),RE("^waylay$",2,"ain",0),RE("^whipsaw$",2,"awn",0),RE("^withhold$",3,"eld",0),RE("^withstand$",3,"ood",0),RE("^win$",3,"won",0),RE("^wind$",3,"ound",0),RE("^weave$",4,"oven",0),RE("^write$",1,"ten",0),RE("^trek$",1,"cked",0),RE("^ko$",1,"o'd",0),RE("^win$",2,"on",0),RE("e$",0,"d",1),RE("^"+VERBAL_PREFIX+"?(cast|thrust|typeset|cut|bid|upset|wet|bet|cut|hit|hurt|inset|let|cost|burst|beat|beset|set|upset|hit|offset|put|quit|wed|typeset|wed|spread|split|slit|read|run|rerun|shut|shed)$",0)],PAST_TENSE_RULES=[RE("^(reduce)$",0,"d",0),RE("e$",0,"d",1),RE("^"+VERBAL_PREFIX+"?[pls]ay$",1,"id",1),RE(CONS+"y$",1,"ied",1),RE("^(fling|cling|hang)$",3,"ung",0),RE("(([sfc][twlp]?r?|w?r)ing)$",3,"ang",1),RE("^"+VERBAL_PREFIX+"?(bend|spend|send|lend|spend)$",1,"t",0),RE("^"+VERBAL_PREFIX+"?lie$",2,"ay",0),RE("^"+VERBAL_PREFIX+"?(weep|sleep|sweep|creep|keep)$",2,"pt",0),RE("^"+VERBAL_PREFIX+"?(sell|tell)$",3,"old",0),RE("^"+VERBAL_PREFIX+"?do$",1,"id",0),RE("^"+VERBAL_PREFIX+"?dig$",2,"ug",0),RE("^behave$",0,"d",0),RE("^(have)$",2,"d",0),RE("(sink|drink)$",3,"ank",0),RE("^swing$",3,"ung",0),RE("^be$",2,"was",0),RE("^outfight$",4,"ought",0),RE("^tarmac",0,"ked",0),RE("^abide$",3,"ode",0),RE("^aby$",1,"ought",0),RE("^become$",3,"ame",0),RE("^begird$",3,"irt",0),RE("^outlie$",2,"ay",0),RE("^rebind$",3,"ound",0),RE("^shit$",3,"hat",0),RE("^bereave$",4,"eft",0),RE("^foreswear$",3,"ore",0),RE("^bename$",3,"empt",0),RE("^beseech$",4,"ought",0),RE("^bethink$",3,"ought",0),RE("^bleed$",4,"led",0),RE("^bog-down$",5,"ged-down",0),RE("^buy$",2,"ought",0),RE("^bind$",3,"ound",0),RE("^(.*)feed$",4,"fed",0),RE("^breed$",4,"red",0),RE("^brei$",2,"eid",0),RE("^bring$",3,"ought",0),RE("^build$",3,"ilt",0),RE("^come$",3,"ame",0),RE("^catch$",3,"ught",0),RE("^clothe$",5,"lad",0),RE("^crossbreed$",4,"red",0),RE("^deal$",2,"alt",0),RE("^dow$",1,"ught",0),RE("^dream$",2,"amt",0),RE("^dwell$",3,"elt",0),RE("^enwind$",3,"ound",0),RE("^feel$",3,"elt",0),RE("^flee$",3,"led",0),RE("^floodlight$",5,"lit",0),RE("^arise$",3,"ose",0),RE("^eat$",3,"ate",0),RE("^backbite$",4,"bit",0),RE("^backslide$",4,"lid",0),RE("^befall$",3,"ell",0),RE("^begin$",3,"gan",0),RE("^beget$",3,"got",0),RE("^behold$",3,"eld",0),RE("^bespeak$",3,"oke",0),RE("^bestride$",3,"ode",0),RE("^betake$",3,"ook",0),RE("^bite$",4,"bit",0),RE("^blow$",3,"lew",0),RE("^bear$",3,"ore",0),RE("^break$",3,"oke",0),RE("^choose$",4,"ose",0),RE("^cleave$",4,"ove",0),RE("^countersink$",3,"ank",0),RE("^drink$",3,"ank",0),RE("^draw$",3,"rew",0),RE("^drive$",3,"ove",0),RE("^fall$",3,"ell",0),RE("^fly$",2,"lew",0),RE("^flyblow$",3,"lew",0),RE("^forbid$",2,"ade",0),RE("^forbear$",3,"ore",0),RE("^foreknow$",3,"new",0),RE("^foresee$",3,"saw",0),RE("^forespeak$",3,"oke",0),RE("^forego$",2,"went",0),RE("^forgive$",3,"ave",0),RE("^forget$",3,"got",0),RE("^forsake$",3,"ook",0),RE("^forspeak$",3,"oke",0),RE("^forswear$",3,"ore",0),RE("^forgo$",2,"went",0),RE("^fight$",4,"ought",0),RE("^find$",3,"ound",0),RE("^freeze$",4,"oze",0),RE("^give$",3,"ave",0),RE("^geld$",3,"elt",0),RE("^gen-up$",3,"ned-up",0),RE("^ghostwrite$",3,"ote",0),RE("^get$",3,"got",0),RE("^grow$",3,"rew",0),RE("^grind$",3,"ound",0),RE("^hear$",2,"ard",0),RE("^hold$",3,"eld",0),RE("^hide$",4,"hid",0),RE("^honey$",2,"ied",0),RE("^inbreed$",4,"red",0),RE("^indwell$",3,"elt",0),RE("^interbreed$",4,"red",0),RE("^interweave$",4,"ove",0),RE("^inweave$",4,"ove",0),RE("^ken$",2,"ent",0),RE("^kneel$",3,"elt",0),RE("^^know$$",3,"new",0),RE("^leap$",2,"apt",0),RE("^learn$",2,"rnt",0),RE("^lead$",4,"led",0),RE("^leave$",4,"eft",0),RE("^light$",5,"lit",0),RE("^lose$",3,"ost",0),RE("^make$",3,"ade",0),RE("^mean$",2,"ant",0),RE("^meet$",4,"met",0),RE("^misbecome$",3,"ame",0),RE("^misdeal$",2,"alt",0),RE("^misgive$",3,"ave",0),RE("^mishear$",2,"ard",0),RE("^mislead$",4,"led",0),RE("^mistake$",3,"ook",0),RE("^misunderstand$",3,"ood",0),RE("^outbreed$",4,"red",0),RE("^outgrow$",3,"rew",0),RE("^outride$",3,"ode",0),RE("^outshine$",3,"one",0),RE("^outshoot$",4,"hot",0),RE("^outstand$",3,"ood",0),RE("^outthink$",3,"ought",0),RE("^outgo$",2,"went",0),RE("^outwear$",3,"ore",0),RE("^overblow$",3,"lew",0),RE("^overbear$",3,"ore",0),RE("^overbuild$",3,"ilt",0),RE("^overcome$",3,"ame",0),RE("^overdraw$",3,"rew",0),RE("^overdrive$",3,"ove",0),RE("^overfly$",2,"lew",0),RE("^overgrow$",3,"rew",0),RE("^overhear$",2,"ard",0),RE("^overpass$",3,"ast",0),RE("^override$",3,"ode",0),RE("^oversee$",3,"saw",0),RE("^overshoot$",4,"hot",0),RE("^overthrow$",3,"rew",0),RE("^overtake$",3,"ook",0),RE("^overwind$",3,"ound",0),RE("^overwrite$",3,"ote",0),RE("^partake$",3,"ook",0),RE("^"+VERBAL_PREFIX+"?run$",2,"an",0),RE("^ring$",3,"ang",0),RE("^rebuild$",3,"ilt",0),RE("^red",0),RE("^reave$",4,"eft",0),RE("^remake$",3,"ade",0),RE("^resit$",3,"sat",0),RE("^rethink$",3,"ought",0),RE("^retake$",3,"ook",0),RE("^rewind$",3,"ound",0),RE("^rewrite$",3,"ote",0),RE("^ride$",3,"ode",0),RE("^rise$",3,"ose",0),RE("^reeve$",4,"ove",0),RE("^sing$",3,"ang",0),RE("^sink$",3,"ank",0),RE("^sit$",3,"sat",0),RE("^see$",3,"saw",0),RE("^shoe$",3,"hod",0),RE("^shine$",3,"one",0),RE("^shake$",3,"ook",0),RE("^shoot$",4,"hot",0),RE("^shrink$",3,"ank",0),RE("^shrive$",3,"ove",0),RE("^sightsee$",3,"saw",0),RE("^ski$",1,"i'd",0),RE("^skydive$",3,"ove",0),RE("^slay$",3,"lew",0),RE("^slide$",4,"lid",0),RE("^slink$",3,"unk",0),RE("^smite$",4,"mit",0),RE("^seek$",3,"ought",0),RE("^spit$",3,"pat",0),RE("^speed$",4,"ped",0),RE("^spellbind$",3,"ound",0),RE("^spoil$",2,"ilt",0),RE("^speak$",3,"oke",0),RE("^spotlight$",5,"lit",0),RE("^spring$",3,"ang",0),RE("^spin$",3,"pun",0),RE("^stink$",3,"ank",0),RE("^steal$",3,"ole",0),RE("^stand$",3,"ood",0),RE("^stave$",3,"ove",0),RE("^stride$",3,"ode",0),RE("^strive$",3,"ove",0),RE("^strike$",3,"uck",0),RE("^stick$",3,"uck",0),RE("^swim$",3,"wam",0),RE("^swear$",3,"ore",0),RE("^teach$",4,"aught",0),RE("^think$",3,"ought",0),RE("^throw$",3,"rew",0),RE("^take$",3,"ook",0),RE("^tear$",3,"ore",0),RE("^transship$",4,"hip",0),RE("^tread$",4,"rod",0),RE("^typewrite$",3,"ote",0),RE("^unbind$",3,"ound",0),RE("^unclothe$",5,"lad",0),RE("^underbuy$",2,"ought",0),RE("^undergird$",3,"irt",0),RE("^undershoot$",4,"hot",0),RE("^understand$",3,"ood",0),RE("^undertake$",3,"ook",0),RE("^undergo$",2,"went",0),RE("^underwrite$",3,"ote",0),RE("^unfreeze$",4,"oze",0),RE("^unlearn$",2,"rnt",0),RE("^unmake$",3,"ade",0),RE("^unreeve$",4,"ove",0),RE("^unspeak$",3,"oke",0),RE("^unstick$",3,"uck",0),RE("^unswear$",3,"ore",0),RE("^unteach$",4,"aught",0),RE("^unthink$",3,"ought",0),RE("^untread$",4,"rod",0),RE("^unwind$",3,"ound",0),RE("^upbuild$",3,"ilt",0),RE("^uphold$",3,"eld",0),RE("^upheave$",4,"ove",0),RE("^uprise$",3,"ose",0),RE("^upspring$",3,"ang",0),RE("^go$",2,"went",0),RE("^wiredraw$",3,"rew",0),RE("^withdraw$",3,"rew",0),RE("^withhold$",3,"eld",0),RE("^withstand$",3,"ood",0),RE("^wake$",3,"oke",0),RE("^win$",3,"won",0),RE("^wear$",3,"ore",0),RE("^wind$",3,"ound",0),RE("^weave$",4,"ove",0),RE("^write$",3,"ote",0),RE("^trek$",1,"cked",0),RE("^ko$",1,"o'd",0),RE("^bid",2,"ade",0),RE("^win$",2,"on",0),RE("^swim",2,"am",0),RE("^"+VERBAL_PREFIX+"?(cast|thrust|typeset|cut|bid|upset|wet|bet|cut|hit|hurt|inset|let|cost|burst|beat|beset|set|upset|offset|put|quit|wed|typeset|wed|spread|split|slit|read|run|shut|shed|lay)$",0)],PRESENT_TENSE_RULES=[RE("^aby$",0,"es",0),RE("^bog-down$",5,"s-down",0),RE("^chivy$",1,"vies",0),RE("^gen-up$",3,"s-up",0),RE("^prologue$",3,"gs",0),RE("^picknic$",0,"ks",0),RE("^ko$",0,"'s",0),RE("[osz]$",0,"es",1),RE("^have$",2,"s",0),RE(CONS+"y$",1,"ies",1),RE("^be$",2,"is"),RE("([zsx]|ch|sh)$",0,"es",1)],VERB_CONS_DOUBLING=["abat","abet","abhor","abut","accur","acquit","adlib","admit","aerobat","aerosol","agendaset","allot","alot","anagram","annul","appal","apparel","armbar","aver","babysit","airdrop","appal","blackleg","bobsled","bur","chum","confab","counterplot","curet","dib","backdrop","backfil","backflip","backlog","backpedal","backslap","backstab","bag","balfun","ballot","ban","bar","barbel","bareleg","barrel","bat","bayonet","becom","bed","bedevil","bedwet","beenhop","befit","befog","beg","beget","begin","bejewel","bemedal","benefit","benum","beset","besot","bestir","bet","betassel","bevel","bewig","bib","bid","billet","bin","bip","bit","bitmap","blab","blag","blam","blan","blat","bles","blim","blip","blob","bloodlet","blot","blub","blur","bob","bodypop","bog","booby-trap","boobytrap","booksel","bootleg","bop","bot","bowel","bracket","brag","brig","brim","bud","buffet","bug","bullshit","bum","bun","bus","but","cab","cabal","cam","can","cancel","cap","caracol","caravan","carburet","carnap","carol","carpetbag","castanet","cat","catcal","catnap","cavil","chan","chanel","channel","chap","char","chargecap","chat","chin","chip","chir","chirrup","chisel","chop","chug","chur","clam","clap","clearcut","clip","clodhop","clog","clop","closet","clot","club","co-occur","co-program","co-refer","co-run","co-star","cob","cobweb","cod","coif","com","combat","comit","commit","compel","con","concur","confer","confiscat","control","cop","coquet","coral","corbel","corral","cosset","cotransmit","councel","council","counsel","court-martial","crab","cram","crap","crib","crop","crossleg","cub","cudgel","cum","cun","cup","cut","dab","dag","dam","dan","dap","daysit","de-control","de-gazet","de-hul","de-instal","de-mob","de-program","de-rig","de-skil","deadpan","debag","debar","log","decommit","decontrol","defer","defog","deg","degas","deinstal","demit","demob","demur","den","denet","depig","depip","depit","der","deskil","deter","devil","diagram","dial","dig","dim","din","dip","disbar","disbud","discomfit","disembed","disembowel","dishevel","disinter","dispel","disprefer","distil","dog","dognap","don","doorstep","dot","dowel","drag","drat","driftnet","distil","egotrip","enrol","enthral","extol","fulfil","gaffe","golliwog","idyl","inspan","drip","drivel","drop","drub","drug","drum","dub","duel","dun","dybbuk","earwig","eavesdrop","ecolabel","eitherspigot","electroblot","embed","emit","empanel","enamel","endlabel","endtrim","enrol","enthral","entrammel","entrap","enwrap","equal","equip","estop","exaggerat","excel","expel","extol","fag","fan","farewel","fat","featherbed","feget","fet","fib","fig","fin","fingerspel","fingertip","fit","flab","flag","flap","flip","flit","flog","flop","fob","focus","fog","footbal","footslog","fop","forbid","forget","format","fortunetel","fot","foxtrot","frag","freefal","fret","frig","frip","frog","frug","fuel","fufil","fulfil","fullyfit","fun","funnel","fur","furpul","gab","gad","gag","gam","gambol","gap","garot","garrot","gas","gat","gel","gen","get","giftwrap","gig","gimbal","gin","glam","glenden","glendin","globetrot","glug","glut","gob","goldpan","goostep","gossip","grab","gravel","grid","grin","grip","grit","groundhop","grovel","grub","gum","gun","gunrun","gut","gyp","haircut","ham","han","handbag","handicap","handknit","handset","hap","hareleg","hat","headbut","hedgehop","hem","hen","hiccup","highwal","hip","hit","hobnob","hog","hop","horsewhip","hostel","hot","hotdog","hovel","hug","hum","humbug","hup","hushkit","hut","illfit","imbed","immunblot","immunoblot","impannel","impel","imperil","incur","infer","infil","inflam","initial","input","inset","instil","inter","interbed","intercrop","intercut","interfer","instal","instil","intermit","japan","jug","kris","manumit","mishit","mousse","mud","interwar","jab","jag","jam","jar","jawdrop","jet","jetlag","jewel","jib","jig","jitterbug","job","jog","jog-trot","jot","jut","ken","kennel","kid","kidnap","kip","kissogram","kit","knap","kneecap","knit","knob","knot","kor","label","lag","lam","lap","lavel","leafcut","leapfrog","leg","lem","lep","let","level","libel","lid","lig","lip","lob","log","lok","lollop","longleg","lop","lowbal","lug","mackerel","mahom","man","map","mar","marshal","marvel","mat","matchwin","metal","micro-program","microplan","microprogram","milksop","mis-cal","mis-club","mis-spel","miscal","mishit","mislabel","mit","mob","mod","model","mohmam","monogram","mop","mothbal","mug","multilevel","mum","nab","nag","nan","nap","net","nightclub","nightsit","nip","nod","nonplus","norkop","nostril","not","nut","nutmeg","occur","ocur","offput","offset","omit","ommit","onlap","out-general","out-gun","out-jab","out-plan","out-pol","out-pul","out-put","out-run","out-sel","outbid","outcrop","outfit","outgas","outgun","outhit","outjab","outpol","output","outrun","outship","outshop","outsin","outstrip","outswel","outspan","overcrop","pettifog","photostat","pouf","preset","prim","pug","ret","rosin","outwit","over-commit","over-control","over-fil","over-fit","over-lap","over-model","over-pedal","over-pet","over-run","over-sel","over-step","over-tip","over-top","overbid","overcal","overcommit","overcontrol","overcrap","overdub","overfil","overhat","overhit","overlap","overman","overplot","overrun","overshop","overstep","overtip","overtop","overwet","overwil","pad","paintbal","pan","panel","paperclip","par","parallel","parcel","partiescal","pat","patrol","pedal","peewit","peg","pen","pencil","pep","permit","pet","petal","photoset","phototypeset","phut","picket","pig","pilot","pin","pinbal","pip","pipefit","pipet","pit","plan","plit","plod","plop","plot","plug","plumet","plummet","pod","policyset","polyfil","ponytrek","pop","pot","pram","prebag","predistil","predril","prefer","prefil","preinstal","prep","preplan","preprogram","prizewin","prod","profer","prog","program","prop","propel","pub","pummel","pun","pup","pushfit","put","quarel","quarrel","quickskim","quickstep","quickwit","quip","quit","quivertip","quiz","rabbit","rabit","radiolabel","rag","ram","ramrod","rap","rat","ratecap","ravel","re-admit","re-cal","re-cap","re-channel","re-dig","re-dril","re-emit","re-fil","re-fit","re-flag","re-format","re-fret","re-hab","re-instal","re-inter","re-lap","re-let","re-map","re-metal","re-model","re-pastel","re-plan","re-plot","re-plug","re-pot","re-program","re-refer","re-rig","re-rol","re-run","re-sel","re-set","re-skin","re-stal","re-submit","re-tel","re-top","re-transmit","re-trim","re-wrap","readmit","reallot","rebel","rebid","rebin","rebut","recap","rechannel","recommit","recrop","recur","recut","red","redril","refer","refit","reformat","refret","refuel","reget","regret","reinter","rejig","rekit","reknot","relabel","relet","rem","remap","remetal","remit","remodel","reoccur","rep","repel","repin","replan","replot","repol","repot","reprogram","rerun","reset","resignal","resit","reskil","resubmit","retransfer","retransmit","retro-fit","retrofit","rev","revel","revet","rewrap","rib","richochet","ricochet","rid","rig","rim","ringlet","rip","rit","rival","rivet","roadrun","rob","rocket","rod","roset","rot","rowel","rub","run","runnel","rut","sab","sad","sag","sandbag","sap","scab","scalpel","scam","scan","scar","scat","schlep","scrag","scram","shall","sled","smut","stet","sulfuret","trepan","unrip","unstop","whir","whop","wig","scrap","scrat","scrub","scrum","scud","scum","scur","semi-control","semi-skil","semi-skim","semiskil","sentinel","set","shag","sham","shed","shim","shin","ship","shir","shit","shlap","shop","shopfit","shortfal","shot","shovel","shred","shrinkwrap","shrivel","shrug","shun","shut","side-step","sideslip","sidestep","signal","sin","sinbin","sip","sit","skid","skim","skin","skip","skir","skrag","slab","slag","slam","slap","slim","slip","slit","slob","slog","slop","slot","slowclap","slug","slum","slur","smit","snag","snap","snip","snivel","snog","snorkel","snowcem","snub","snug","sob","sod","softpedal","son","sop","spam","span","spar","spat","spiderweb","spin","spiral","spit","splat","split","spot","sprag","spraygun","sprig","springtip","spud","spur","squat","squirrel","stab","stag","star","stem","sten","stencil","step","stir","stop","storytel","strap","strim","strip","strop","strug","strum","strut","stub","stud","stun","sub","subcrop","sublet","submit","subset","suedetrim","sum","summit","sun","suntan","sup","super-chil","superad","swab","swag","swan","swap","swat","swig","swim","swivel","swot","tab","tag","tan","tansfer","tap","tar","tassel","tat","tefer","teleshop","tendril","terschel","th'strip","thermal","thermostat","thin","throb","thrum","thud","thug","tightlip","tin","tinsel","tip","tittup","toecap","tog","tom","tomorrow","top","tot","total","towel","traget","trainspot","tram","trammel","transfer","tranship","transit","transmit","transship","trap","travel","trek","trendset","trim","trip","tripod","trod","trog","trot","trousseaushop","trowel","trup","tub","tug","tunnel","tup","tut","twat","twig","twin","twit","typeset","tyset","un-man","unban","unbar","unbob","uncap","unclip","uncompel","undam","under-bil","under-cut","under-fit","under-pin","under-skil","underbid","undercut","underlet","underman","underpin","unfit","unfulfil","unknot","unlip","unlywil","unman","unpad","unpeg","unpin","unplug","unravel","unrol","unscrol","unsnap","unstal","unstep","unstir","untap","unwrap","unzip","up","upset","upskil","upwel","ven","verbal","vet","victual","vignet","wad","wag","wainscot","wan","war","water-log","waterfal","waterfil","waterlog","weasel","web","wed","wet","wham","whet","whip","whir","whiteskin","whiz","whup","wildcat","win","windmil","wit","woodchop","woodcut","wor","worship","wrap","wiretap","yen","yak","yap","yarnspin","yip","yodel","zag","zap","zig","zig-zag","zigzag","zip","ztrip","hand-bag","hocus","hocus-pocus"],PAST_PARTICIPLE_RULESET={
name:"PAST_PARTICIPLE",defaultRule:RE(ANY_STEM,0,"ed",2),rules:PAST_PARTICIPLE_RULES,doubling:!0},PRESENT_PARTICIPLE_RULESET={name:"ING_FORM",defaultRule:RE(ANY_STEM,0,"ing",2),rules:ING_FORM_RULES,doubling:!0},PAST_TENSE_RULESET={name:"PAST_TENSE",defaultRule:RE(ANY_STEM,0,"ed",2),rules:PAST_TENSE_RULES,doubling:!0},PRESENT_TENSE_RULESET={name:"PRESENT_TENSE",defaultRule:RE(ANY_STEM,0,"s",2),rules:PRESENT_TENSE_RULES,doubling:!1},hasP5="undefined"!=typeof p5;!RiTa.SILENT&&console&&console.log("[INFO] RiTaJS.version ["+RiTa.VERSION+"]"),window?(window.RiTa=RiTa,window.RiString=RiString,window.RiGrammar=RiGrammar,window.RiMarkov=RiMarkov,window.RiWordNet=RiWordNet,window.RiLexicon=RiLexicon,window.RiTaEvent=RiTaEvent):"undefined"!=typeof module&&(module.exports.RiTa=RiTa,module.exports.RiString=RiString,module.exports.RiGrammar=RiGrammar,module.exports.RiMarkov=RiMarkov,module.exports.RiWordNet=RiWordNet,module.exports.RiLexicon=RiLexicon,module.exports.RiTaEvent=RiTaEvent)}("undefined"!=typeof window?window:null);